{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","descriptionBlock","postsBlock","posts","item","ProfileStatusWithHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onDoubleClick","onChange","e","target","value","autoFocus","onBlur","updateStatus","ProfileInfo","_ref","profile","className","style","src","photos","large","ProfileInfo_ProfileStatusWithHooks","Preloader","Post","message","likesCount","MyPosts","React","memo","postsElements","map","post","MyPosts_Post_Post","id","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","userId","params","authorizedUserId","history","push","getUserProfile","getStatus","components_Profile_Profile","assign","Component","compose","auth","isAuth","WrappedComponent","useParams"],"mappings":"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","file":"static/js/1.1cf18b39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1tjGp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1lujP\",\"posts\":\"MyPosts_posts__r0Bs-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2MqFS\"};","import React, {useEffect, useState} from \"react\";\r\n\r\n const ProfileStatusWithHooks = (props) => {\r\n\r\n     let [editMode, setEditMode] = useState(false);\r\n     let [status, setStatus] = useState(props.status)\r\n\r\n     useEffect(() => {\r\n         setStatus(props.status)\r\n     }, [props.status])\r\n\r\n     const activateEditMode = () => {\r\n         setEditMode(true)\r\n     }\r\n\r\n\r\n     const deactivateEditMode = () => {\r\n         setEditMode(false)\r\n         props.updateStatus(status)\r\n     }\r\n\r\n     const onStatusChange = (e) => {\r\n         setStatus(e.target.value)\r\n     }\r\n\r\n     return (\r\n         <div>\r\n             {!editMode &&\r\n                 <div>\r\n                     <span onDoubleClick={activateEditMode}>{props.status || '------'}</span>\r\n                 </div>\r\n             }\r\n             {editMode &&\r\n                 <div>\r\n                     <input onChange={onStatusChange} autoFocus={true}\r\n                            onBlur={deactivateEditMode} value={status}/>\r\n                 </div>\r\n             }\r\n         </div>\r\n     )\r\n }\r\n\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport style from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n    <div className={style.descriptionBlock}>\r\n        <img src={profile.photos.large}/>\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <img src='https://cdn-icons-png.flaticon.com/512/53/53104.png'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsComtrol/FormsControl\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        props.posts.map(post => <Post message={post.message} id={post.id} likesCount={post.likesCount}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={style.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newPostText' component={Textarea} placeholder={'Post message'} validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addPost: (newPostText) => {\r\n            dispatch(addPost(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n    <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {useParams} from \"react-router\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst withRouter = WrappedComponent => props => {\r\n    const params = useParams();\r\n    return (\r\n        <WrappedComponent\r\n            {...props}\r\n            params={params}\r\n\r\n        />\r\n    );\r\n};\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n) (ProfileContainer);"],"sourceRoot":""}