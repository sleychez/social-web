{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["DialogItem","props","path","id","react_default","a","createElement","className","style","dialog","dist","to","divData","isActive","active","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","Dialogs_DialogItem_DialogItem","key","messagesElements","messages","Dialogs_Message_Message","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","Component","RedirectComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","react_router_dist","React"],"mappings":"wJAiBeA,EAbI,SAACC,GAEhB,IAAIC,EAAO,WAAaD,EAAME,GAE9B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMC,QAClBL,EAAAC,EAAAC,cAACI,EAAA,EAAO,CAACC,GAAIT,EAAMK,UAAY,SAAAK,GAAO,OAAIA,EAAQC,SAAWL,IAAMM,OAASN,IAAMC,SAAUR,EAAMc,QCI/FC,EARC,SAACf,GACb,OACAG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMC,QAASR,EAAMgB,0CC2BnCC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,CAdL,SAACpB,GACpB,OACIG,EAAAC,EAAAC,cAAA,QAAMiB,SAAUtB,EAAMuB,cAClBpB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmB,EAAA,EAAK,CAACV,KAAK,iBAAiBW,UAAWC,IAC7BC,YAAY,qBAAqBC,SAAU,CAACC,IAAUZ,MAErEd,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0BAQDyB,EA5CC,SAAC9B,GAEb,IAAI+B,EAAQ/B,EAAMgC,YAEdC,EAAkBF,EAAMG,QAAQC,IAAI,SAAC3B,GAAM,OAAKL,EAAAC,EAAAC,cAAC+B,EAAU,CAACtB,KAAMN,EAAOM,KAAMuB,IAAK7B,EAAON,GAAIA,GAAIM,EAAON,OAC1GoC,EAAmBP,EAAMQ,SAASJ,IAAI,SAACnB,GAAO,OAAKb,EAAAC,EAAAC,cAACmC,EAAO,CAACxB,QAASA,EAAQA,QAASd,GAAIc,EAAQd,GAAImC,IAAKrB,EAAQd,OAOvH,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAM2B,SAClB/B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMkC,cACjBR,GAEL9B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMgC,UAClBpC,EAAAC,EAAAC,cAAA,WAAMiC,IAGVnC,EAAAC,EAAAC,cAACc,EAAmB,CAACG,SAdT,SAACoB,GACjB1C,EAAM2C,YAAYD,EAAOE,4ECb7BC,EAA6B,SAACd,GAAK,MAAM,CACzCe,OAAQf,EAAMgB,KAAKD,iBCqBRE,sBACXC,YAhBkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,cAKF,SAACkB,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASP,YAAYC,QDZD,SAACO,GAAc,IACrCC,EAAiB,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAMxB,OANwBN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAf,IAAA,SAAA0B,MAAA,WAGrB,OAAKP,KAAKxD,MAAM8C,OAET3C,EAAAC,EAAAC,cAAC8C,EAAcK,KAAKxD,OAFIG,EAAAC,EAAAC,cAAC2D,EAAA,EAAQ,CAACtD,GAAG,eAG/C0C,EANwB,CAASa,IAAMd,WAWtC,OAFqCF,YAAQJ,EAARI,CAAoCG,ICO9DJ,CAEOlB","file":"static/js/2.fc7de81c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = 'dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={style.dialog}>\r\n            <NavLink to={path} className={ divData => divData.isActive ? style.active : style.dialog }>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from './../Dialogs.module.css';\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n    <div className={style.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport style from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsComtrol/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map((dialog) => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>);\r\n    let messagesElements = state.messages.map((message) => <Message message={message.message} id={message.id} key={message.id}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                <div>{messagesElements}</div>\r\n\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newMessageBody' component={Textarea}\r\n                           placeholder='Enter your message' validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Navigate} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n  render() {\r\n\r\n      if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n      return <Component {...this.props}/>\r\n  }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from \"react\";\r\nimport {\r\n    sendMessage,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessage(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs);"],"sourceRoot":""}