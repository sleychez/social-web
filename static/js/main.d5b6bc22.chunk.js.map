{"version":3,"sources":["components/common/FormsComtrol/FormsControl.module.css","utils/validators/validators.ts","components/common/Paginator/Paginator.module.css","redux/dialogs-reducer.ts","assets/images/icon-256x256.png","assets/images/preloader.gif","components/Users/Users.module.css","components/Header/Header.module.css","api/api.ts","api/profile-api.ts","redux/profile-reducer.ts","redux/sidebar-reducer.ts","utils/object-helpers.ts","api/users-api.ts","redux/users-reducer.ts","api/auth-api.ts","api/security-api.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","hooks/useAppDispatch.tsx","hooks/useAppSelector.tsx","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","redux/users-selectors.ts","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersPage.tsx","components/Login/Login.tsx","redux/auth-selectors.ts","components/Header/Header.tsx","App.tsx","index.tsx","components/common/FormsComtrol/FormsControl.tsx","components/common/Preloader/Preloader.tsx"],"names":["module","exports","formControl","error","formSummaryError","__webpack_require__","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","length","concat","paginator","pageNumber","selectedPage","initialState","dialogs","id","name","messages","message","actions","sendMessage","newMessageBody","type","dialogsReducer","state","arguments","undefined","action","body","Object","C_Users_User_WebstormProjects_social_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","C_Users_User_WebstormProjects_social_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","p","userPhoto","header","instance","ResultCode","ResultCodeForCaptcha","axios","create","withCredentials","baseURL","headers","API-KEY","profileApi","userId","get","then","res","data","status","put","photoFile","formData","FormData","append","Content-Type","profile","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","unwrapped","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","posts","likesCount","addPost","newPostText","setUserProfile","setStatus","savePhotoSuccess","photos","getUserProfile","_ref","asyncToGenerator","_callee","dispatch","_context","_x","apply","getStatus","_ref2","_callee2","_context2","_x2","updateStatus","_ref3","_callee3","_context3","resultCode","_x3","savePhoto","file","_ref4","_callee4","_context4","_x4","saveProfile","_ref5","_callee5","getState","_context5","auth","stopSubmit","_error","_x5","_x6","profileReducer","newPost","objectSpread","toConsumableArray","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","user","usersApi","getUsers","currentPage","pageSize","term","friend","follow","post","unfollow","delete","users","totalUsersCount","isFetching","followingInProgress","filter","payload","count","requestUsers","page","totalCount","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","authApi","email","password","rememberMe","captcha","securityApi","auth_reducer_regeneratorRuntime","login","isAuth","captchaUrl","getAuthUserData","meData","_meData$data","_login","Success","getCaptchaUrl","url","authReducer","console","log","app_reducer_regeneratorRuntime","initialized","appReducer","rootReducer","combineReducers","profilePage","dialogsPage","sidebar","usersPage","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","useAppDispatch","useDispatch","useAppSelector","useSelector","Paginator","totalItemsCount","_ref$currentPage","_ref$onPageChanged","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","react_default","a","createElement","className","style","onClick","cn","Users","dist","to","src","small","disabled","some","createSelector","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getUsersFilter","usersSearchFormValidate","UsersSearchForm","React","memo","props","formik_esm","enableReinitialize","initialValues","String","validate","onSubmit","setSubmitting","onFilterChanged","isSubmitting","as","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","searchTerm","searchCurrentPage","searchFriend","Boolean","useEffect","following","bind","unfollowing","_x7","common_Paginator_Paginator","User","UsersPage","Fragment","pageTitle","Preloader","components_Users_Users","LoginReduxForm","reduxForm","handleSubmit","createField","Input","Login","react_router_dist","loginData","CaptchaIsRequired","selectIsAuth","selectCurrentLogin","Header","Layout","colorBgContainer","theme","useToken","token","padding","background","marginRight","fontWeight","color","fontSize","avatar","alt","backgroundColor","margin","shape","icon","UserOutlined","es_button","marginLeft","ProfileContainer","lazy","e","DialogsContainer","Content","Footer","Sider","getItem","label","children","WrappedComponent","MessageOutlined","TeamOutlined","CommentOutlined","withRouter","collapsed","setCollapsed","catchAllUnhandledErrors","alert","promise","all","addEventListener","removeEventListener","layout","height","width","display","collapsible","onCollapse","menu","mode","flexDirection","Header_Header","path","element","Suspense","fallback","UsersPage_UsersPage","Login_Login","textAlign","alignItems","justifyContent","params","useParams","assign","ReactDOM","createRoot","document","getElementById","render","StrictMode","react_redux_es","src_App","FormsControl","_ref$meta","meta","touched","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","Textarea","input","restProps","C_Users_User_WebstormProjects_social_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","placeholder","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_images_preloader_gif__WEBPACK_IMPORTED_MODULE_1__","_assets_images_preloader_gif__WEBPACK_IMPORTED_MODULE_1___default","preloader"],"mappings":"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","file":"static/js/main.d5b6bc22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__1G2qu\",\"error\":\"FormsControl_error___VgMl\",\"formSummaryError\":\"FormsControl_formSummaryError___fvLQ\"};","\r\nexport type FieldValidatorType = (value: string) => string | undefined\r\n\r\n\r\nexport const required:FieldValidatorType = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number):FieldValidatorType => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__x0mhg\",\"pageNumber\":\"Paginator_pageNumber__2JOOY\",\"selectedPage\":\"Paginator_selectedPage__jKTEu\"};","import {InferActionsTypes} from \"./redux-store\";\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\ntype DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ntype MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Nikita'},\r\n        {id: 2, name: 'Sveta'},\r\n        {id: 3, name: 'Danil'},\r\n        {id: 4, name: 'Vlad'},\r\n        {id: 5, name: 'Yarik'},\r\n        {id: 6, name: 'Slava'}\r\n        ] as Array<DialogsType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your dog?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ] as Array<MessagesType>\r\n};\r\n\r\n\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AN/DIALOGS/SEND-MESSAGE':\r\n            let body = action.newMessageBody\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const  actions= {\r\n    sendMessage:(newMessageBody: string) => ({type: 'AN/DIALOGS/SEND-MESSAGE', newMessageBody} as const)\r\n}\r\n\r\n\r\nexport default dialogsReducer","module.exports = __webpack_public_path__ + \"static/media/icon-256x256.23dc8d23.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.3f259006.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__jNbP0\",\"selectedPage\":\"Users_selectedPage__3MEF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1T5dH\"};","import axios from \"axios\"\r\nimport {UserType} from \"../types/types\"\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'ddb53878-a138-494f-a8f1-858c444acf6a'\r\n    }\r\n})\r\n\r\n\r\nexport enum ResultCode {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport enum ResultCodeForCaptcha {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type GetItemsType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCode> = {\r\n    data: D\r\n    messages: Array<string>\r\n    resultCode: RC\r\n}\r\n\r\n\r\n\r\n\r\n","import {PhotosType, ProfileType} from \"../types/types\";\r\nimport {APIResponseType, instance} from \"./api\";\r\n\r\ntype SavePhotoResponseType = {\r\n    photos: PhotosType\r\n}\r\n\r\n\r\nexport const profileApi = {\r\n    getProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/` + userId).then(res => res.data)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>('profile/status/' + userId).then(res => res.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>('profile/status', {status: status}).then(res => res.data)\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData()\r\n        formData.append('image', photoFile)\r\n\r\n        return instance.put<APIResponseType<SavePhotoResponseType>>('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res => res.data);\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<APIResponseType>(`profile`, profile).then(res => res.data)\r\n    }\r\n}","import {FormAction, stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\nimport {profileApi} from \"../api/profile-api\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi,how are you?', likesCount: 14},\r\n        {id: 2, message: 'Its my first post', likesCount: 43},\r\n        {id: 3, message: 'Blabla', likesCount: 42},\r\n        {id: 4, message: 'Dada', likesCount: 43}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: ''\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AN/PROFILE/ADD-POST': {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case 'AN/PROFILE/SET_USER_PROFILE': {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case 'AN/PROFILE/SET_STATUS': {\r\n            return {...state, status: action.status}\r\n        }\r\n        case 'AN/PROFILE/SAVE_PHOTO_SUCCESS': {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const actions = {\r\n\r\n addPost: (newPostText: string) => ({type: 'AN/PROFILE/ADD-POST', newPostText} as const),\r\n\r\n\r\n\r\n setUserProfile: (profile: ProfileType) => ({type: 'AN/PROFILE/SET_USER_PROFILE', profile} as const),\r\n\r\n\r\n\r\nsetStatus: (status: string)  => ({type: 'AN/PROFILE/SET_STATUS', status} as const),\r\n\r\n\r\nsavePhotoSuccess: (photos: PhotosType)  => ({type: 'AN/PROFILE/SAVE_PHOTO_SUCCESS', photos} as const)\r\n}\r\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    const data = await profileApi.getProfile(userId)\r\n    dispatch(actions.setUserProfile(data));\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileApi.getStatus(userId)\r\n    dispatch(actions.setStatus(data));\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    let data = await profileApi.updateStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actions.setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    let data = await profileApi.savePhoto(file)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actions.savePhotoSuccess(data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const data = await profileApi.saveProfile(profile)\r\n\r\n    if (data.resultCode === 0) {\r\n        if (userId != null) {\r\n        await dispatch(getUserProfile(userId));\r\n            } else {\r\n            throw new Error('userId cant be null')\r\n        }\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: data.messages[0]}))\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n}\r\n\r\nexport default profileReducer;","\r\nlet initialState = {\r\n\r\n}\r\n\r\ntype InitialState = typeof initialState\r\n\r\nconst sidebarReducer = (state = initialState, action:any): InitialState=> {\r\nreturn state\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((user: any) => {\r\n    if (user[objPropName] === itemId) {\r\n        return {...user, ...newObjProps}\r\n    }\r\n    return user;\r\n})\r\n}\r\n\r\nexport const outputDateSeconds = () => {\r\n    const date = new Date()\r\n    let output = String(\r\n        date.getHours()\r\n        + ':' + date.getMinutes()\r\n        + ':' + date.getSeconds()\r\n        + ':' + date.getMilliseconds()\r\n    )\r\n    output = output + ''\r\n    return output\r\n}","import {GetItemsType, instance, APIResponseType} from \"./api\"\r\n\r\n\r\nexport const usersApi = {\r\n    getUsers(currentPage = 1, pageSize = 20, term: string = '', friend: null | boolean = null) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? '' : `&friend=${friend}`))\r\n            .then(res => res.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post<APIResponseType>(`follow/${userId}`).then(res => res.data)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`).then(res => res.data) as Promise<APIResponseType>\r\n    }\r\n}","import {updateObjectInArray} from \"../utils/object-helpers\";\r\nimport {UserType} from \"../types/types\";\r\nimport {Dispatch} from \"redux\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {usersApi} from \"../api/users-api\";\r\nimport {APIResponseType} from \"../api/api\";\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\nexport type FilterType = typeof initialState.filter\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>,//number of users ids\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AN/USERS/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case 'AN/USERS/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case 'AN/USERS/SET_USERS': {\r\n            return {...state, users: action.users}\r\n        }\r\n        case 'AN/USERS/SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'AN/USERS/SET_FILTER' : {\r\n            return {...state, filter: action.payload}\r\n        }\r\n        case 'AN/USERS/SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case 'AN/USERS/TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'AN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    followSuccess: (userId: number) => ({type: 'AN/USERS/FOLLOW', userId} as const),\r\n    unfollowSuccess: (userId: number) => ({type: 'AN/USERS/UNFOLLOW', userId} as const),\r\n    setUsers: (users: Array<UserType>) => ({type: 'AN/USERS/SET_USERS', users} as const),\r\n    setCurrentPage: (currentPage: number) => ({type: 'AN/USERS/SET_CURRENT_PAGE', currentPage} as const),\r\n    setFilter: (filter: FilterType) => ({type: 'AN/USERS/SET_FILTER', payload: filter} as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({\r\n        type: 'AN/USERS/SET_TOTAL_USERS_COUNT',\r\n        count: totalUsersCount\r\n    } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: 'AN/USERS/TOGGLE_IS_FETCHING', isFetching} as const),\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => ({\r\n        type: 'AN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n        isFetching,\r\n        userId\r\n    } as const)\r\n}\r\n\r\n\r\nexport const requestUsers = (page: number,\r\n                             pageSize: number, filter: FilterType): ThunkType => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(actions.toggleIsFetching(true))\r\n        dispatch(actions.setCurrentPage(page))\r\n        dispatch(actions.setFilter(filter))\r\n\r\n        let data = await usersApi.getUsers(page, pageSize, filter.term, filter.friend)\r\n        dispatch(actions.toggleIsFetching(false));\r\n        dispatch(actions.setUsers(data.items));\r\n        dispatch(actions.setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch: Dispatch<ActionsTypes>,\r\n                                  userId: number,\r\n                                  apiMethod: (userId: number) => Promise<APIResponseType>,\r\n                                  actionCreator: (userId: number) => ActionsTypes) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(actions.toggleFollowingProgress(false, userId));\r\n}\r\n\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersApi.follow.bind(usersApi), actions.followSuccess)\r\n    }\r\n\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersApi.unfollow.bind(usersApi), actions.unfollowSuccess)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default usersReducer;","import {instance, ResultCode, ResultCodeForCaptcha} from \"./api\"\r\n\r\nimport {APIResponseType} from \"./api\"\r\n\r\n\r\ntype MeResponseDataType = {\r\n        id: number\r\n        email: string\r\n        login: string\r\n}\r\n\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}\r\n\r\nexport const authApi = {\r\n    me() {\r\n        return instance.get<APIResponseType<MeResponseDataType>>(`auth/me`).then(res => res.data)\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | boolean = null) {\r\n        return instance.post<APIResponseType<LoginResponseDataType, ResultCode | ResultCodeForCaptcha>>(`auth/login`, {email, password, rememberMe, captcha})\r\n            .then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}","import {instance} from \"./api\";\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const securityApi = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`).then(res => res.data)\r\n    }\r\n}","import {ResultCode, ResultCodeForCaptcha} from '../api/api'\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {authApi} from \"../api/auth-api\";\r\nimport {securityApi} from \"../api/security-api\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\n\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | ReturnType<typeof stopSubmit>>\r\n\r\n\r\n\r\nlet initialState = {\r\n    userId: null as (number | null),\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null,\r\n};\r\n\r\n\r\n\r\nconst authReducer = (state = initialState, action: ActionsType):InitialStateType => {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case 'AN/auth/SET_USER_DATA':\r\n        case 'AN/auth/GET_CAPTCHA_URL_SUCCESS':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n\r\nsetAuthUserData:(userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: 'AN/auth/SET_USER_DATA', payload:\r\n        {userId, email, login, isAuth}\r\n} as const),\r\n\r\n\r\ngetCaptchaUrlSuccess:(captchaUrl: string) => ({\r\n    type: 'AN/auth/GET_CAPTCHA_URL_SUCCESS', payload: {captchaUrl}\r\n} as const)\r\n}\r\n\r\nexport const getAuthUserData = ():ThunkType => async (dispatch: any) => {\r\n    let meData = await authApi.me();\r\n\r\n    if (meData.resultCode === ResultCode.Success) {\r\n        let {id, login, email} = meData.data;\r\n        dispatch(actions.setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\r\n    // @ts-ignore\r\n    let loginData = await authApi.login(email, password, rememberMe, captcha)\r\n    if (loginData.resultCode === ResultCode.Success) {\r\n        await dispatch(getAuthUserData())\r\n    } else {\r\n        if (loginData.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\r\n            await dispatch(getCaptchaUrl())\r\n        }\r\n        let message = loginData.messages.length > 0 ? loginData.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch:any) => {\r\n    const data = await securityApi.getCaptchaUrl()\r\n    const captchaUrl = data.url\r\n        dispatch(actions.getCaptchaUrlSuccess(captchaUrl));\r\n    }\r\n\r\n\r\nexport const logout = (): ThunkType => async (dispatch: any) => {\r\n    let response = await authApi.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actions.setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\ntype ThunkType = BaseThunkType<ActionsType | ReturnType<typeof stopSubmit>>\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nconst appReducer = (state = initialState, action:ActionsType):InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AN/APP/INITIALIZED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({type: 'AN/APP/INITIALIZED_SUCCESS'} as const)\r\n\r\n}\r\nexport const initializeApp = (): ThunkType => async (dispatch: any) => {\r\nlet promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(actions.initializedSuccess())\r\n        })\r\n}\r\n\r\n\r\n\r\nexport default appReducer;","import {Action, applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\ntype RootReducerType = typeof rootReducer\r\n\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n\r\nexport type InferActionsTypes<T> = T extends {[key: string]: (...args: any[]) => infer U} ? U : never\r\n\r\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import {AppDispatch} from \"../redux/redux-store\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport const useAppDispatch = (): AppDispatch => {\r\n    return useDispatch()\r\n}","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\n\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<AppStateType> = useSelector","import React, {useState} from \"react\";\r\nimport style from \"./Paginator.module.css\";\r\nimport cn from 'classnames'\r\n\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChanged?: (pageNumber:number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({totalItemsCount, pageSize,\r\n                                          currentPage = 1, onPageChanged = () => {}, portionSize = 20}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages = [] as Array<number>;\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return <div className={style.paginator}>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n\r\n\r\n\r\n            {pages\r\n                .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n                .map((page) => {\r\n                return <span className={cn({\r\n                [style.selectedPage] : currentPage === page\r\n            }, style.pageNumber)}\r\n                key={page}\r\n                             onClick={() => {\r\n                                 onPageChanged(page)\r\n                             }}>{page}</span>\r\n\r\n            })}\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n\r\n\r\n        </div>\r\n\r\n        }\r\n\r\n        export default Paginator;","import React from \"react\";\r\nimport style from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/icon-256x256.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\n\r\nconst Users: React.FC<PropsType> = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto} className={style.userPhoto}/>\r\n                </NavLink>\r\n                    </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress\r\n                        .some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  unfollow(user.id)\r\n                              }}>\r\n                        Unfollow</button>\r\n                    : <button disabled={followingInProgress\r\n                        .some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  follow(user.id)\r\n                              }}>\r\n                        Follow</button>}\r\n            </div>\r\n                </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n            <span>\r\n            <div>{'user.location.country'}</div>\r\n                <div>{'user.location.city'}</div>\r\n            </span>\r\n            </span>\r\n        </div>)\r\n\r\n\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true)\r\n    })\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return  state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return  state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return  state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return  state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return  state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n    return  state.usersPage.filter\r\n}\r\n\r\n\r\n\r\n\r\n","import {Field, Form, Formik} from \"formik\";\r\nimport {FilterType} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUsersFilter} from \"../../redux/users-selectors\";\r\n\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors = {}\r\n    return errors\r\n}\r\n\r\ntype FriendFormType = 'true' | 'false' | 'null'\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: 'true' | 'false' | 'null'\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\n\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\nconst filter = useSelector(getUsersFilter)\r\n    const submit = (values: FormType, {setSubmitting}: {setSubmitting: (isSubmitting: boolean)=> void}) => {\r\n\r\n        const filter: FilterType = {\r\n    term: values.term,\r\n    friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n}\r\n\r\n\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\nreturn <div>\r\n    <Formik\r\n        enableReinitialize\r\n        initialValues={{term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n        validate={usersSearchFormValidate}\r\n        onSubmit={submit}\r\n        >\r\n        {({ isSubmitting }) => (\r\n            <Form>\r\n                <Field type=\"text\" name=\"term\" />\r\n\r\n                <Field name=\"friend\" as='select'>\r\n                    <option value='null'>All</option>\r\n                    <option value='true'>Only followed</option>\r\n                    <option value='false'>Only unfollowed</option>\r\n</Field>\r\n                <button type ='submit' disabled={isSubmitting}>\r\n                    Find\r\n                </button>\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n</div>\r\n})\r\n","import React, {FC, useEffect} from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport {UsersSearchForm} from \"./UsersSearchForm\";\r\nimport {FilterType, follow, requestUsers, unfollow} from \"../../redux/users-reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../redux/users-selectors\";\r\nimport {useAppDispatch} from \"../../hooks/useAppDispatch\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\ntype PropsType = {}\r\n\r\nexport const Users: FC<PropsType> = () => {\r\n\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const users = useSelector(getUsers)\r\n    const filter = useSelector(getUsersFilter)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    let [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    const searchTerm = searchParams.get('term') || ''\r\n\r\n    const searchCurrentPage = +(searchParams.get('currentPage') || '1')\r\n\r\n    const searchFriend = searchParams.get('friend') === 'null' ? null : Boolean(searchParams.get('friend'))\r\n\r\n    useEffect(() => {\r\n        dispatch(requestUsers(searchCurrentPage, pageSize, {term: searchTerm, friend: searchFriend} ))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setSearchParams({term: filter.term, friend: String(filter.friend), currentPage: String(currentPage)})\r\n    }, [filter, currentPage])\r\n\r\n\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize, filter))\r\n    }\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(1,pageSize, filter))\r\n    }\r\n\r\n    const following = (userId: number) => {\r\n        dispatch(follow(userId))\r\n    }\r\n\r\n    const unfollowing = (userId: number) => {\r\n        dispatch(unfollow(userId))\r\n    }\r\n\r\n\r\n\r\n    return <div>\r\n\r\n        <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n       <div>\r\n        {\r\n            users.map(user => <User user={user}\r\n                                    followingInProgress={followingInProgress}\r\n                                    key={user.id}\r\n                                    unfollow={unfollowing}\r\n                                    follow={following}\r\n                />\r\n            )\r\n        }\r\n       </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {getIsFetching} from \"../../redux/users-selectors\";\r\n\r\n\r\ntype UsersPagePropsType = {\r\n    pageTitle: string\r\n}\r\n\r\nexport const UsersPage:React.FC<UsersPagePropsType> = (props) => {\r\n    const isFetching = useSelector(getIsFetching)\r\n        return <>\r\n            <h2>{props.pageTitle}</h2>\r\n            {isFetching ? <Preloader/> : null}\r\n            <Users/>\r\n        </>\r\n    }\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from 'redux-form'\r\nimport {createField, GetStringKeysType, Input} from \"../common/FormsComtrol/FormsControl\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Navigate} from \"react-router\";\r\nimport style from './../common/FormsComtrol/FormsControl.module.css'\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {useAppDispatch} from \"../../hooks/useAppDispatch\";\r\n\r\ntype LoginFormOwnPropsType = {\r\n    captchaUrl: string | null\r\n}\r\n\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnPropsType> & LoginFormOwnPropsType> = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField<LoginFormValuesTypeKeys>('Email', 'email', [required], Input)}\r\n            {createField<LoginFormValuesTypeKeys>('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField<LoginFormValuesTypeKeys>(undefined, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\r\n\r\n            {captchaUrl && <img src={captchaUrl}/>}\r\n            {captchaUrl && createField<LoginFormValuesTypeKeys>('Symbols from image', 'captcha', [required], Input, {})}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnPropsType>({form: 'login'})(LoginForm)\r\n\r\n\r\n\r\ntype LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\ntype LoginFormValuesTypeKeys = GetStringKeysType<LoginFormValuesType>\r\n\r\n\r\nexport const Login: React.FC = () => {\r\n\r\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n    const captchaUrl = useSelector((state: AppStateType) => state.auth.captchaUrl)\r\n\r\n   const dispatch = useAppDispatch()\r\n\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }\r\n\r\n\r\n    if (isAuth) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n    </div>\r\n}\r\n","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const selectIsAuth = (state: AppStateType) => {\r\n    return  state.auth.isAuth\r\n}\r\n\r\nexport const selectCurrentLogin = (state: AppStateType) => {\r\n    return  state.auth.login\r\n}","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport {Avatar, Button, Layout, theme} from \"antd\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\nimport {useAppSelector} from \"../../hooks/useAppSelector\";\r\nimport {selectCurrentLogin, selectIsAuth} from \"../../redux/auth-selectors\";\r\nimport {useAppDispatch} from \"../../hooks/useAppDispatch\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport type StatePropsType = {}\r\n\r\n\r\nexport const Header:React.FC<StatePropsType> = () => {\r\n\r\nconst isAuth = useAppSelector(selectIsAuth)\r\n    const login = useAppSelector(selectCurrentLogin)\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    const logoutCallback = () => {\r\n    dispatch(logout())\r\n    }\r\n\r\n    const {Header} = Layout;\r\n\r\n    const {\r\n        token: { colorBgContainer },\r\n    } = theme.useToken();\r\n\r\n    return  <Header className={style.header} style={{ padding: 0, background: colorBgContainer}}>\r\n        {isAuth\r\n            ? <>\r\n                <span style={{marginRight: '570px',fontWeight: 'bold', color: 'white', fontSize: '25px' }}>Aurora</span>\r\n                <Avatar alt={login || ''} style={{backgroundColor: '#423189', margin: '10px'}} shape=\"square\" icon={<UserOutlined/>}/>\r\n                <span style={{fontWeight: 'bold'}}>{login}</span>\r\n                <Button style={{marginLeft: '10px'}}onClick={logoutCallback}>Log out</Button>\r\n            </>\r\n            : <Button>\r\n                <Link to={'/login'}>Login</Link>\r\n            </Button>\r\n        }\r\n    </Header>\r\n}","import React, {FC, lazy, useEffect, useState} from 'react';\r\nimport './App.module.css';\r\nimport {Link, Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {useParams} from \"react-router\";\r\nimport {useAppDispatch} from \"./hooks/useAppDispatch\";\r\nimport {useAppSelector} from \"./hooks/useAppSelector\";\r\nimport {UsersPage} from \"./components/Users/UsersPage\";\r\nimport {Login} from \"./components/Login/Login\";\r\nimport 'antd/dist/reset.css'\r\nimport type {MenuProps} from 'antd';\r\nimport {Layout, Menu} from \"antd\";\r\nimport {CommentOutlined, MessageOutlined, TeamOutlined, UserOutlined,} from '@ant-design/icons';\r\nimport {Header} from \"./components/Header/Header\";\r\n\r\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\n\r\nconst withRouter =<T,> (WrappedComponent: FC<T>) => (props: T) => {\r\n    const params = useParams();\r\n    return (\r\n        <WrappedComponent\r\n            {...props}\r\n            params={params}\r\n\r\n        />\r\n    );\r\n};\r\n\r\nconst {  Content, Footer, Sider } = Layout;\r\n\r\ntype MenuItem = Required<MenuProps>['items'][number];\r\n\r\nfunction getItem(\r\n    label: React.ReactNode,\r\n    key: React.Key,\r\n    icon?: React.ReactNode,\r\n    children?: MenuItem[],\r\n): MenuItem {\r\n    return {\r\n        key,\r\n        icon,\r\n        children,\r\n        label,\r\n    } as MenuItem;\r\n}\r\n\r\nconst items: MenuItem[] = [\r\n    getItem('My profile', '1', <Link to='/profile'><UserOutlined /></Link>),\r\n    getItem('Dialogs', '2', <Link to='/dialogs'><MessageOutlined /></Link>),\r\n    getItem('Users', 'sub1', <Link to='/users'><TeamOutlined /></Link> ),\r\n    getItem('General chat', 'sub2', <Link to='/generalChat'><CommentOutlined /></Link> )]\r\n\r\n\r\n\r\nconst App: React.FC = () => {\r\n\r\n    const [collapsed, setCollapsed] = useState(true);\r\n\r\n\r\n\r\n    const initialized = useAppSelector((state) => state.app.initialized)\r\n    const dispatch = useAppDispatch()\r\n    const catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\r\n        alert('Some error occurred')\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeApp())\r\n        window.addEventListener('unhandledrejection', catchAllUnhandledErrors)\r\n        return () => {window.removeEventListener('unhandledrejection', catchAllUnhandledErrors)}\r\n    }, [])\r\n\r\n\r\n    if (!initialized) {\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n    return (\r\n        <Layout style={{ height: '100%', width: '100%', display:'flex'}}>\r\n\r\n            <Sider collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}>\r\n                <div style={{ height: 32, margin: 16, background: 'rgba(255, 255, 255, 0.2)' }} />\r\n                <Menu theme=\"dark\" mode=\"inline\" items={items}/>\r\n            </Sider>\r\n            <Layout className=\"site-layout\" style={{display: 'flex', flexDirection: 'column' } }>\r\n                <Header/>\r\n                <Content style={{ margin: '0 16px' }}>\r\n                    <Routes>\r\n                                        <Route path=\"/\"\r\n                                               element={<Navigate to={'/profile'}/>}/>\r\n                                        <Route path=\"/profile/:userId\"\r\n                                               element={<ProfileContainer/>}/>\r\n                                        <Route path=\"/profile\"\r\n                                               element={<React.Suspense fallback={<Preloader/>}><ProfileContainer/></React.Suspense>}/>\r\n                                        <Route path='/dialogs'\r\n                                               element={<React.Suspense fallback={<Preloader/>}><DialogsContainer/></React.Suspense>}/>\r\n\r\n                                        <Route path='/users/*'\r\n                                            //@ts-ignore\r\n                                               element={<UsersPage pageTitle={'Пользователи'}/>}/>\r\n                                         <Route path='/login'\r\n                                                element={<Login/>}/>\r\n                                        <Route path=\"*\"\r\n                                               element={<div>404 NOT FOUND</div>}/>\r\n                                    </Routes>\r\n                </Content>\r\n\r\n                <Footer style={{ textAlign: 'center', backgroundColor: '#003153', color: 'white' , height: '49px', display: 'flex',  alignItems: 'center', justifyContent: 'center', flexDirection: 'column'}}>Aurora Social Network ©2022 Created by sleychez</Footer>\r\n            </Layout>\r\n\r\n        </Layout>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default withRouter(App);","import store from \"./redux/redux-store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\n\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLDivElement);\r\n\r\n    root.render(\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n            </BrowserRouter>\r\n        </React.StrictMode>\r\n    );\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport style from './FormsControl.module.css'\r\nimport {Field, WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\"\r\nimport {FieldValidatorType} from \"../../../utils/validators/validators\";\r\n\r\n\r\nexport type GetStringKeysType<T> = Extract<keyof T, string>\r\n\r\ntype FormsControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n    children: React.ReactNode\r\n}\r\n\r\n\r\nconst FormsControl: React.FC<FormsControlPropsType> = ({meta: {touched, error},children }) => {\r\nconst hasError = touched && error\r\nreturn (\r\n    <div className={style.formControl + ' ' + (hasError ? style.error : '')}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        { hasError && <span>{error}</span> }\r\n    </div>\r\n)\r\n}\r\n\r\n\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormsControl {...props}><textarea {...input} {...restProps} /></FormsControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormsControl {...props}><input {...input} {...restProps} /></FormsControl>\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\r\n                            name: FormKeysType,\r\n                            validators: Array<FieldValidatorType>,\r\n                            component: React.FC<WrappedFieldProps>,\r\n                            props = {}, text = '') {\r\n    return <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               component={component}\r\n               validate={validators}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n}\r\n\r\n","import React from \"react\";\r\nimport preloader from '../../../assets/images/preloader.gif'\r\n\r\nconst Preloader = () => {\r\n    return <img src={preloader} />\r\n}\r\n\r\nexport default Preloader;"],"sourceRoot":""}