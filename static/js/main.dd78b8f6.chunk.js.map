{"version":3,"sources":["components/common/FormsComtrol/FormsControl.module.css","utils/validators/validators.ts","App.module.css","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","api/profile-api.ts","redux/profile-reducer.ts","redux/dialogs-reducer.ts","assets/images/icon-256x256.png","assets/images/preloader.gif","components/Users/Users.module.css","api/api.ts","redux/sidebar-reducer.ts","utils/object-helpers.ts","api/users-api.ts","redux/users-reducer.ts","api/auth-api.ts","api/security-api.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","hooks/useAppDispatch.tsx","hooks/useAppSelector.tsx","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","redux/users-selectors.ts","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersPage.tsx","components/Login/Login.tsx","redux/auth-selectors.ts","components/Header/Header.tsx","App.tsx","index.tsx","components/common/FormsComtrol/FormsControl.tsx","components/common/Preloader/Preloader.tsx"],"names":["module","exports","formControl","error","formSummaryError","__webpack_require__","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","length","concat","layoutOne","img","footer","paginator","pageNumber","selectedPage","header","aurora","profileApi","userId","instance","get","then","res","data","status","put","photoFile","formData","FormData","append","headers","Content-Type","profile","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","unwrapped","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","initialState","posts","id","message","likesCount","actions","addPost","newPostText","setUserProfile","setStatus","savePhotoSuccess","photos","getUserProfile","_ref","asyncToGenerator","_callee","dispatch","_context","_x","apply","arguments","getStatus","_ref2","_callee2","_context2","_x2","updateStatus","_ref3","_callee3","_context3","resultCode","_x3","savePhoto","file","_ref4","_callee4","_context4","_x4","saveProfile","_ref5","_callee5","getState","_context5","auth","stopSubmit","_error","messages","_x5","_x6","profileReducer","action","newPost","objectSpread","toConsumableArray","dialogs","sendMessage","newMessageBody","dialogsReducer","body","C_Users_User_WebstormProjects_social_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","C_Users_User_WebstormProjects_social_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","p","userPhoto","ResultCode","ResultCodeForCaptcha","axios","withCredentials","baseURL","API-KEY","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","user","usersApi","getUsers","currentPage","pageSize","term","friend","follow","post","unfollow","delete","users","totalUsersCount","isFetching","followingInProgress","filter","payload","count","requestUsers","page","totalCount","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","authApi","email","password","rememberMe","captcha","securityApi","auth_reducer_regeneratorRuntime","login","isAuth","captchaUrl","getAuthUserData","meData","_meData$data","_login","Success","getCaptchaUrl","url","authReducer","console","log","app_reducer_regeneratorRuntime","initialized","appReducer","rootReducer","combineReducers","profilePage","dialogsPage","sidebar","usersPage","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","useAppDispatch","useDispatch","useAppSelector","useSelector","Paginator","totalItemsCount","_ref$currentPage","_ref$onPageChanged","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","react_default","a","createElement","className","style","onClick","cn","Users","dist","to","src","small","disabled","some","createSelector","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getUsersFilter","usersSearchFormValidate","UsersSearchForm","React","memo","props","formik_esm","enableReinitialize","initialValues","String","validate","onSubmit","setSubmitting","onFilterChanged","isSubmitting","as","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","searchTerm","searchCurrentPage","searchFriend","Boolean","useEffect","following","bind","unfollowing","_x7","common_Paginator_Paginator","User","UsersPage","Fragment","pageTitle","Preloader","components_Users_Users","LoginReduxForm","reduxForm","handleSubmit","createField","Input","fontWeight","Login","react_router_dist","loginData","CaptchaIsRequired","selectIsAuth","selectCurrentLogin","Header","Layout","colorBgContainer","theme","useToken","token","padding","background","avatar","alt","backgroundColor","margin","shape","icon","UserOutlined","es_button","marginLeft","ProfileContainer","lazy","e","DialogsContainer","Content","Footer","Sider","getItem","label","children","WrappedComponent","MessageOutlined","TeamOutlined","withRouter","collapsed","setCollapsed","catchAllUnhandledErrors","alert","promise","all","addEventListener","removeEventListener","layout","collapsible","onCollapse","menu","mode","display","flexDirection","Header_Header","path","element","Suspense","fallback","UsersPage_UsersPage","Login_Login","params","useParams","assign","ReactDOM","createRoot","document","getElementById","render","StrictMode","react_redux_es","src_App","FormsControl","_ref$meta","meta","touched","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","Textarea","input","restProps","C_Users_User_WebstormProjects_social_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","placeholder","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_images_preloader_gif__WEBPACK_IMPORTED_MODULE_1__","_assets_images_preloader_gif__WEBPACK_IMPORTED_MODULE_1___default","preloader"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,YAAA,kCAAAC,MAAA,4BAAAC,iBAAA,0ECGlBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAO,IAAMD,EAA8B,SAACE,GACxC,IAAIA,EACJ,MAAO,qBAGED,EAAmB,SAACE,GAAiB,OAAwB,SAACD,GACvE,GAAIA,EAAME,OAASD,EAAW,uBAAAE,OAAwBF,EAAS,mCCTnEX,EAAAC,QAAA,CAAkBa,UAAA,uBAAAC,IAAA,iBAAAC,OAAA,0CCAlBhB,EAAAC,QAAA,CAAkBgB,UAAA,6BAAAC,WAAA,8BAAAC,aAAA,sDCAlBnB,EAAAC,QAAA,CAAkBmB,OAAA,uBAAAC,OAAA,sGCOLC,EACC,SAACC,GACP,OAAOC,IAASC,IAAiB,WAAaF,GAAQG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QAFjEN,EAIA,SAACC,GACN,OAAOC,IAASC,IAAY,kBAAoBF,GAAQG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QALnEN,EAOG,SAACO,GACT,OAAOL,IAASM,IAAqB,iBAAkB,CAACD,OAAQA,IAASH,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QARpFN,EAUA,SAACS,GACN,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,QAASH,GAElBP,IAASM,IAA4C,gBAAiBE,EAAU,CACnFG,QAAS,CACLC,eAAgB,yBAErBV,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QAlBdN,EAoBE,SAACe,GACR,OAAOb,IAASM,IAAG,UAA6BO,GAASX,KAAK,SAAAC,GAAG,OAAIA,EAAIC,qBC5BjFU,EAAA,kBAAArC,GAAA,IAAAA,EAAA,GAAAsC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAC,EAAAC,EAAA5C,GAAA,OAAA8B,OAAAe,eAAAF,EAAAC,EAAA,CAAA5C,QAAA8C,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAL,EAAAC,GAAA,IAAAF,EAAA,aAAAO,GAAAP,EAAA,SAAAC,EAAAC,EAAA5C,GAAA,OAAA2C,EAAAC,GAAA5C,GAAA,SAAAkD,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAArB,qBAAAyB,EAAAJ,EAAAI,EAAAC,EAAA3B,OAAA4B,OAAAH,EAAAxB,WAAA4B,EAAA,IAAAC,EAAAN,GAAA,WAAAG,EAAAI,QAAA,SAAAV,EAAAE,EAAAM,GAAA,IAAAG,EAAA,iCAAAC,EAAAC,GAAA,iBAAAF,EAAA,UAAAG,MAAA,iDAAAH,EAAA,cAAAC,EAAA,MAAAC,EAAA,OAAAE,IAAA,IAAAP,EAAAI,SAAAJ,EAAAK,QAAA,KAAAG,EAAAR,EAAAQ,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAR,GAAA,GAAAS,EAAA,IAAAA,IAAAE,EAAA,gBAAAF,GAAA,YAAAT,EAAAI,OAAAJ,EAAAY,KAAAZ,EAAAa,MAAAb,EAAAK,SAAA,aAAAL,EAAAI,OAAA,uBAAAD,EAAA,MAAAA,EAAA,YAAAH,EAAAK,IAAAL,EAAAc,kBAAAd,EAAAK,SAAA,WAAAL,EAAAI,QAAAJ,EAAAe,OAAA,SAAAf,EAAAK,KAAAF,EAAA,gBAAAa,EAAAC,EAAAzB,EAAAE,EAAAM,GAAA,cAAAgB,EAAAE,KAAA,IAAAf,EAAAH,EAAAmB,KAAA,6BAAAH,EAAAX,MAAAM,EAAA,gBAAAtE,MAAA2E,EAAAX,IAAAc,KAAAnB,EAAAmB,MAAA,UAAAH,EAAAE,OAAAf,EAAA,YAAAH,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,OAAA,CAAAb,EAAAE,EAAAM,GAAAF,EAAA,SAAAmB,EAAAG,EAAApC,EAAAqB,GAAA,WAAAa,KAAA,SAAAb,IAAAe,EAAAC,KAAArC,EAAAqB,IAAA,MAAAf,GAAA,OAAA4B,KAAA,QAAAb,IAAAf,IAAA1D,EAAA2D,OAAA,IAAAoB,EAAA,YAAAd,KAAA,SAAAyB,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzC,EAAAyC,EAAA/C,EAAA,kBAAAgD,OAAA,IAAAC,EAAAvD,OAAAwD,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA1D,GAAAG,EAAAgD,KAAAO,EAAAnD,KAAA+C,EAAAI,GAAA,IAAAE,EAAAP,EAAAnD,UAAAyB,EAAAzB,UAAAD,OAAA4B,OAAAyB,GAAA,SAAAO,EAAA3D,GAAA,0BAAA4D,QAAA,SAAA5B,GAAArB,EAAAX,EAAAgC,EAAA,SAAAC,GAAA,OAAAoB,KAAAvB,QAAAE,EAAAC,OAAA,SAAA4B,EAAAnC,EAAAoC,GAAA,IAAAC,EAAAV,KAAAvB,QAAA,SAAAE,EAAAC,GAAA,SAAA+B,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAnC,EAAAC,EAAAgC,EAAAC,GAAA,IAAAtB,EAAAC,EAAAnB,EAAAM,GAAAN,EAAAO,GAAA,aAAAW,EAAAE,KAAA,KAAAsB,EAAAxB,EAAAX,IAAAhE,EAAAmG,EAAAnG,MAAA,OAAAA,GAAA,iBAAAA,GAAAgC,EAAAgD,KAAAhF,EAAA,WAAA6F,EAAAG,QAAAhG,EAAAoG,SAAApF,KAAA,SAAAhB,GAAAkG,EAAA,OAAAlG,EAAAgG,EAAAC,IAAA,SAAAhD,GAAAiD,EAAA,QAAAjD,EAAA+C,EAAAC,KAAAJ,EAAAG,QAAAhG,GAAAgB,KAAA,SAAAqF,GAAAF,EAAAnG,MAAAqG,EAAAL,EAAAG,IAAA,SAAA1G,GAAA,OAAAyG,EAAA,QAAAzG,EAAAuG,EAAAC,OAAAtB,EAAAX,KAAAkC,CAAAnC,EAAAC,EAAAgC,EAAAC,KAAA,OAAAH,MAAA9E,KAAA+E,UAAA,SAAA1B,EAAAF,EAAAR,GAAA,IAAAI,EAAAI,EAAA9B,SAAAsB,EAAAI,QAAA,QAAAuC,IAAAvC,EAAA,IAAAJ,EAAAQ,SAAA,eAAAR,EAAAI,OAAA,IAAAI,EAAA9B,SAAAkE,SAAA5C,EAAAI,OAAA,SAAAJ,EAAAK,SAAAsC,EAAAjC,EAAAF,EAAAR,GAAA,UAAAA,EAAAI,QAAA,OAAAO,EAAAX,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAwC,UAAA,yDAAAlC,EAAA,IAAAK,EAAAC,EAAAb,EAAAI,EAAA9B,SAAAsB,EAAAK,KAAA,aAAAW,EAAAE,KAAA,OAAAlB,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,IAAAL,EAAAQ,SAAA,KAAAG,EAAA,IAAAmC,EAAA9B,EAAAX,IAAA,OAAAyC,IAAA3B,MAAAnB,EAAAQ,EAAAuC,YAAAD,EAAAzG,MAAA2D,EAAAgD,KAAAxC,EAAAyC,QAAA,WAAAjD,EAAAI,SAAAJ,EAAAI,OAAA,OAAAJ,EAAAK,SAAAsC,GAAA3C,EAAAQ,SAAA,KAAAG,GAAAmC,GAAA9C,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAQ,SAAA,KAAAG,GAAA,SAAAuC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA1B,KAAAgC,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAApC,EAAAoC,EAAAQ,YAAA,GAAA5C,EAAAE,KAAA,gBAAAF,EAAAX,IAAA+C,EAAAQ,WAAA5C,EAAA,SAAAf,EAAAN,GAAA8B,KAAAgC,WAAA,EAAAJ,OAAA,SAAA1D,EAAAqC,QAAAkB,EAAAzB,WAAAoC,OAAA,YAAAhC,EAAAiC,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAArF,GAAA,GAAAsF,EAAA,OAAAA,EAAA1C,KAAAyC,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAvH,QAAA,KAAA0H,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAvH,QAAA,GAAA8B,EAAAgD,KAAAyC,EAAAG,GAAA,OAAAjB,EAAA3G,MAAAyH,EAAAG,GAAAjB,EAAA7B,MAAA,EAAA6B,EAAA,OAAAA,EAAA3G,WAAAsG,EAAAK,EAAA7B,MAAA,EAAA6B,GAAA,OAAAA,UAAA,OAAAA,KAAAzC,GAAA,SAAAA,IAAA,OAAAlE,WAAAsG,EAAAxB,MAAA,UAAAG,EAAAlD,UAAAmD,EAAAxC,EAAA+C,EAAA,cAAAP,GAAAxC,EAAAwC,EAAA,cAAAD,KAAA4C,YAAAnF,EAAAwC,EAAA1C,EAAA,qBAAAjD,EAAAuI,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA/C,GAAA,uBAAA+C,EAAAH,aAAAG,EAAAE,QAAA3I,EAAA4I,KAAA,SAAAJ,GAAA,OAAAjG,OAAAsG,eAAAtG,OAAAsG,eAAAL,EAAA7C,IAAA6C,EAAAM,UAAAnD,EAAAxC,EAAAqF,EAAAvF,EAAA,sBAAAuF,EAAAhG,UAAAD,OAAA4B,OAAA+B,GAAAsC,GAAAxI,EAAA+I,MAAA,SAAAtE,GAAA,OAAAoC,QAAApC,IAAA0B,EAAAE,EAAA7D,WAAAW,EAAAkD,EAAA7D,UAAAO,EAAA,kBAAA8C,OAAA7F,EAAAqG,gBAAArG,EAAAgJ,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAAuC,QAAA,IAAAA,MAAA2C,SAAA,IAAAC,EAAA,IAAA7C,EAAA1C,EAAAC,EAAAC,EAAAC,EAAAC,GAAAuC,GAAA,OAAAtG,EAAAuI,oBAAA1E,GAAAqF,IAAA9B,OAAA3F,KAAA,SAAAmF,GAAA,OAAAA,EAAArB,KAAAqB,EAAAnG,MAAAyI,EAAA9B,UAAAjB,EAAAD,GAAA/C,EAAA+C,EAAAjD,EAAA,aAAAE,EAAA+C,EAAArD,EAAA,kBAAAgD,OAAA1C,EAAA+C,EAAA,mDAAAlG,EAAAmJ,KAAA,SAAAC,GAAA,IAAAD,EAAA,WAAA9F,KAAA+F,EAAAD,EAAArB,KAAAzE,GAAA,OAAA8F,EAAAE,UAAA,SAAAjC,IAAA,KAAA+B,EAAAxI,QAAA,KAAA0C,EAAA8F,EAAAG,MAAA,GAAAjG,KAAA+F,EAAA,OAAAhC,EAAA3G,MAAA4C,EAAA+D,EAAA7B,MAAA,EAAA6B,EAAA,OAAAA,EAAA7B,MAAA,EAAA6B,IAAApH,EAAAiG,SAAA5B,EAAA7B,UAAA,CAAAkG,YAAArE,EAAA4D,MAAA,SAAAsB,GAAA,GAAA1D,KAAA2D,KAAA,EAAA3D,KAAAuB,KAAA,EAAAvB,KAAAb,KAAAa,KAAAZ,WAAA8B,EAAAlB,KAAAN,MAAA,EAAAM,KAAAjB,SAAA,KAAAiB,KAAArB,OAAA,OAAAqB,KAAApB,SAAAsC,EAAAlB,KAAAgC,WAAAzB,QAAA2B,IAAAwB,EAAA,QAAAZ,KAAA9C,KAAA,MAAA8C,EAAAc,OAAA,IAAAhH,EAAAgD,KAAAI,KAAA8C,KAAAP,OAAAO,EAAAe,MAAA,MAAA7D,KAAA8C,QAAA5B,IAAA4C,KAAA,WAAA9D,KAAAN,MAAA,MAAAqE,EAAA/D,KAAAgC,WAAA,GAAAG,WAAA,aAAA4B,EAAAtE,KAAA,MAAAsE,EAAAnF,IAAA,OAAAoB,KAAAgE,MAAA3E,kBAAA,SAAA4E,GAAA,GAAAjE,KAAAN,KAAA,MAAAuE,EAAA,IAAA1F,EAAAyB,KAAA,SAAAkE,EAAAC,EAAAC,GAAA,OAAA7E,EAAAE,KAAA,QAAAF,EAAAX,IAAAqF,EAAA1F,EAAAgD,KAAA4C,EAAAC,IAAA7F,EAAAI,OAAA,OAAAJ,EAAAK,SAAAsC,KAAAkD,EAAA,QAAA5B,EAAAxC,KAAAgC,WAAAlH,OAAA,EAAA0H,GAAA,IAAAA,EAAA,KAAAb,EAAA3B,KAAAgC,WAAAQ,GAAAjD,EAAAoC,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAsC,EAAA,UAAAvC,EAAAC,QAAA5B,KAAA2D,KAAA,KAAAU,EAAAzH,EAAAgD,KAAA+B,EAAA,YAAA2C,EAAA1H,EAAAgD,KAAA+B,EAAA,iBAAA0C,GAAAC,EAAA,IAAAtE,KAAA2D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,MAAA7B,KAAA2D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,iBAAA,GAAAuC,GAAA,GAAArE,KAAA2D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,YAAAyC,EAAA,UAAAzF,MAAA,6CAAAmB,KAAA2D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,gBAAAxC,OAAA,SAAAG,EAAAb,GAAA,QAAA4D,EAAAxC,KAAAgC,WAAAlH,OAAA,EAAA0H,GAAA,IAAAA,EAAA,KAAAb,EAAA3B,KAAAgC,WAAAQ,GAAA,GAAAb,EAAAC,QAAA5B,KAAA2D,MAAA/G,EAAAgD,KAAA+B,EAAA,eAAA3B,KAAA2D,KAAAhC,EAAAG,WAAA,KAAAyC,EAAA5C,EAAA,OAAA4C,IAAA,UAAA9E,GAAA,aAAAA,IAAA8E,EAAA3C,QAAAhD,MAAA2F,EAAAzC,aAAAyC,EAAA,UAAAhF,EAAAgF,IAAApC,WAAA,UAAA5C,EAAAE,OAAAF,EAAAX,MAAA2F,GAAAvE,KAAArB,OAAA,OAAAqB,KAAAuB,KAAAgD,EAAAzC,WAAA5C,GAAAc,KAAAwE,SAAAjF,IAAAiF,SAAA,SAAAjF,EAAAwC,GAAA,aAAAxC,EAAAE,KAAA,MAAAF,EAAAX,IAAA,gBAAAW,EAAAE,MAAA,aAAAF,EAAAE,KAAAO,KAAAuB,KAAAhC,EAAAX,IAAA,WAAAW,EAAAE,MAAAO,KAAAgE,KAAAhE,KAAApB,IAAAW,EAAAX,IAAAoB,KAAArB,OAAA,SAAAqB,KAAAuB,KAAA,kBAAAhC,EAAAE,MAAAsC,IAAA/B,KAAAuB,KAAAQ,GAAA7C,GAAAuF,OAAA,SAAA3C,GAAA,QAAAU,EAAAxC,KAAAgC,WAAAlH,OAAA,EAAA0H,GAAA,IAAAA,EAAA,KAAAb,EAAA3B,KAAAgC,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA9B,KAAAwE,SAAA7C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAzC,IAAAwF,MAAA,SAAA9C,GAAA,QAAAY,EAAAxC,KAAAgC,WAAAlH,OAAA,EAAA0H,GAAA,IAAAA,EAAA,KAAAb,EAAA3B,KAAAgC,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAArC,EAAAoC,EAAAQ,WAAA,aAAA5C,EAAAE,KAAA,KAAAkF,EAAApF,EAAAX,IAAAsD,EAAAP,GAAA,OAAAgD,GAAA,UAAA9F,MAAA,0BAAA+F,cAAA,SAAAvC,EAAAf,EAAAE,GAAA,OAAAxB,KAAAjB,SAAA,CAAA9B,SAAAmD,EAAAiC,GAAAf,aAAAE,WAAA,SAAAxB,KAAArB,SAAAqB,KAAApB,SAAAsC,GAAAhC,IAAA/E,kMASA,IAAI0K,EAAe,CACfC,MAAO,CACH,CAACC,GAAI,EAAGC,QAAS,kBAAmBC,WAAY,IAChD,CAACF,GAAI,EAAGC,QAAS,oBAAqBC,WAAY,IAClD,CAACF,GAAI,EAAGC,QAAS,SAAUC,WAAY,IACvC,CAACF,GAAI,EAAGC,QAAS,OAAQC,WAAY,KAEzC1I,QAAS,KACTR,OAAQ,IAgCCmJ,EAAU,CAEtBC,QAAS,SAACC,GAAmB,MAAM,CAAC3F,KAAM,sBAAuB2F,gBAIjEC,eAAgB,SAAC9I,GAAoB,MAAM,CAACkD,KAAM,8BAA+BlD,YAIlF+I,UAAW,SAACvJ,GAAc,MAAO,CAAC0D,KAAM,wBAAyB1D,WAGjEwJ,iBAAkB,SAACC,GAAkB,MAAO,CAAC/F,KAAM,gCAAiC+F,YAEvEC,EAAiB,SAAChK,GAAc,sBAAAiK,EAAAhJ,OAAAiJ,EAAA,EAAAjJ,CAAAF,IAAAuG,KAAgB,SAAA6C,EAAOC,GAAQ,IAAA/J,EAAA,OAAAU,IAAAsB,KAAA,SAAAgI,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAvE,MAAA,cAAAuE,EAAAvE,KAAA,EACrD/F,EAAsBC,GAAO,OAA1CK,EAAIgK,EAAA3G,KACV0G,EAASX,EAAQG,eAAevJ,IAAO,wBAAAgK,EAAAhC,SAAA8B,MAC1C,gBAAAG,GAAA,OAAAL,EAAAM,MAAAhG,KAAAiG,YAH4C,IAKhCC,EAAY,SAACzK,GAAc,sBAAA0K,EAAAzJ,OAAAiJ,EAAA,EAAAjJ,CAAAF,IAAAuG,KAAgB,SAAAqD,EAAOP,GAAQ,IAAA/J,EAAA,OAAAU,IAAAsB,KAAA,SAAAuI,GAAA,cAAAA,EAAA1C,KAAA0C,EAAA9E,MAAA,cAAA8E,EAAA9E,KAAA,EAClD/F,EAAqBC,GAAO,OAAzCK,EAAIuK,EAAAlH,KACR0G,EAASX,EAAQI,UAAUxJ,IAAO,wBAAAuK,EAAAvC,SAAAsC,MACrC,gBAAAE,GAAA,OAAAH,EAAAH,MAAAhG,KAAAiG,YAHuC,IAK3BM,EAAe,SAACxK,GAAc,sBAAAyK,EAAA9J,OAAAiJ,EAAA,EAAAjJ,CAAAF,IAAAuG,KAAgB,SAAA0D,EAAOZ,GAAQ,OAAArJ,IAAAsB,KAAA,SAAA4I,GAAA,cAAAA,EAAA/C,KAAA+C,EAAAnF,MAAA,cAAAmF,EAAAnF,KAAA,EACrD/F,EAAwBO,GAAO,OACxB,IADhB2K,EAAAvH,KACCwH,YACLd,EAASX,EAAQI,UAAUvJ,IAC9B,wBAAA2K,EAAA5C,SAAA2C,MACJ,gBAAAG,GAAA,OAAAJ,EAAAR,MAAAhG,KAAAiG,YAL0C,IAO9BY,EAAY,SAACC,GAAU,sBAAAC,EAAArK,OAAAiJ,EAAA,EAAAjJ,CAAAF,IAAAuG,KAAgB,SAAAiE,EAAOnB,GAAQ,IAAA/J,EAAA,OAAAU,IAAAsB,KAAA,SAAAmJ,GAAA,cAAAA,EAAAtD,KAAAsD,EAAA1F,MAAA,cAAA0F,EAAA1F,KAAA,EAC9C/F,EAAqBsL,GAAK,OACnB,KADpBhL,EAAImL,EAAA9H,MACCwH,YACLd,EAASX,EAAQK,iBAAiBzJ,EAAKA,KAAK0J,SAC/C,wBAAAyB,EAAAnD,SAAAkD,MACJ,gBAAAE,GAAA,OAAAH,EAAAf,MAAAhG,KAAAiG,YALmC,IAOvBkB,EAAc,SAAC5K,GAAoB,sBAAA6K,EAAA1K,OAAAiJ,EAAA,EAAAjJ,CAAAF,IAAAuG,KAAgB,SAAAsE,EAAOxB,EAAUyB,GAAQ,IAAA7L,EAAAK,EAAA,OAAAU,IAAAsB,KAAA,SAAAyJ,GAAA,cAAAA,EAAA5D,KAAA4D,EAAAhG,MAAA,OAChD,OAA/B9F,EAAS6L,IAAWE,KAAK/L,OAAM8L,EAAAhG,KAAA,EAClB/F,EAAuBe,GAAQ,OAAxC,GAEc,KAFlBT,EAAIyL,EAAApI,MAEDwH,WAAgB,CAAAY,EAAAhG,KAAA,YACP,MAAV9F,EAAc,CAAA8L,EAAAhG,KAAA,gBAAAgG,EAAAhG,KAAA,EACZsE,EAASJ,EAAehK,IAAQ,OAAA8L,EAAAhG,KAAA,uBAE5B,IAAI1C,MAAM,uBAAsB,QAAA0I,EAAAhG,KAAA,iBAGsB,OAAhEsE,EAAS4B,YAAW,eAAgB,CAACC,OAAQ5L,EAAK6L,SAAS,MAAKJ,EAAAjI,OAAA,SACzD8D,QAAQvC,OAAO/E,EAAK6L,SAAS,KAAG,yBAAAJ,EAAAzD,SAAAuD,MAE9C,gBAAAO,EAAAC,GAAA,OAAAT,EAAApB,MAAAhG,KAAAiG,YAd+C,IAgBjC6B,IAnFQ,WAAiE,IAAhEpJ,EAAKuH,UAAAnL,OAAA,QAAAoG,IAAA+E,UAAA,GAAAA,UAAA,GAAGpB,EAAckD,EAAmB9B,UAAAnL,OAAA,EAAAmL,UAAA,QAAA/E,EAC7D,OAAQ6G,EAAOtI,MACX,IAAK,sBACD,IAAIuI,EAAU,CACVjD,GAAI,EACJC,QAAS+C,EAAO3C,YAChBH,WAAY,GAEhB,OAAOvI,OAAAuL,EAAA,EAAAvL,CAAA,GACAgC,EAAK,CACRoG,MAAK,GAAA/J,OAAA2B,OAAAwL,EAAA,EAAAxL,CAAMgC,EAAMoG,OAAK,CAAEkD,MAGhC,IAAK,8BACD,OAAOtL,OAAAuL,EAAA,EAAAvL,CAAA,GAAIgC,EAAK,CAAEnC,QAASwL,EAAOxL,UAEtC,IAAK,wBACD,OAAOG,OAAAuL,EAAA,EAAAvL,CAAA,GAAIgC,EAAK,CAAE3C,OAAQgM,EAAOhM,SAErC,IAAK,gCACD,OAAOW,OAAAuL,EAAA,EAAAvL,CAAA,GAAIgC,EAAK,CAAEnC,QAAQG,OAAAuL,EAAA,EAAAvL,CAAA,GAAKgC,EAAMnC,QAAO,CAAEiJ,OAAQuC,EAAOvC,WACjE,QACI,OAAO9G,0FC3BfmG,EAAe,CACfsD,QAAS,CACL,CAACpD,GAAI,EAAGjC,KAAM,UACd,CAACiC,GAAI,EAAGjC,KAAM,SACd,CAACiC,GAAI,EAAGjC,KAAM,SACd,CAACiC,GAAI,EAAGjC,KAAM,QACd,CAACiC,GAAI,EAAGjC,KAAM,SACd,CAACiC,GAAI,EAAGjC,KAAM,UAElB6E,SAAU,CACN,CAAC5C,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,gBACjB,CAACD,GAAI,EAAGC,QAAS,kBACjB,CAACD,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAO,0BAqBTE,EAAS,CACnBkD,YAAY,SAACC,GAAsB,MAAM,CAAC5I,KAAM,0BAA2B4I,oBAIhEC,IAnBQ,WAAiE,IAAhE5J,EAAKuH,UAAAnL,OAAA,QAAAoG,IAAA+E,UAAA,GAAAA,UAAA,GAAGpB,EAAckD,EAAmB9B,UAAAnL,OAAA,EAAAmL,UAAA,QAAA/E,EAC7D,OAAQ6G,EAAOtI,MACX,IAAK,0BACD,IAAI8I,EAAOR,EAAOM,eAClB,OAAO3L,OAAA8L,EAAA,EAAA9L,CAAA,GACAgC,EAAK,CACRiJ,SAAQ,GAAA5M,OAAA2B,OAAA+L,EAAA,EAAA/L,CAAMgC,EAAMiJ,UAAQ,CAAE,CAAC5C,GAAI,EAAGC,QAASuD,OAEvD,QACI,OAAO7J,yBC/CnBxE,EAAAC,QAAiBI,EAAAmO,EAAuB,8DCAxCxO,EAAAC,QAAiBI,EAAAmO,EAAuB,2DCCxCxO,EAAAC,QAAA,CAAkBwO,UAAA,yBAAAtN,aAAA,oGCDlBd,EAAAC,EAAAC,EAAA,sBAAAiB,IAAAnB,EAAAC,EAAAC,EAAA,sBAAAmO,IAAArO,EAAAC,EAAAC,EAAA,sBAAAoO,IAAA,IAaYD,EAKAC,EAdCnN,EAJbnB,EAAA,KAIwBuO,EAAMxK,OAAO,CACjCyK,iBAAiB,EACjBC,QAAS,gDACT3M,QAAS,CACL4M,UAAW,2CAQlB,SAHWL,OAAU,qBAAVA,IAAU,iBAGrB,CAHWA,MAAU,KAOrB,SAFWC,OAAoB,0CAE/B,CAFWA,MAAoB,4ECjB5BhE,EAAe,GAUJqE,EAJQ,WAAmD,IAAlDxK,EAAKuH,UAAAnL,OAAA,QAAAoG,IAAA+E,UAAA,GAAAA,UAAA,GAAGpB,EAAwBoB,UAAAnL,OAAA,GAAAmL,UAAA,GACxD,OAAOvH,2BCRMyK,EAAsB,SAACC,EAAYC,EAAaC,EAAkBC,GAC3E,OAAOH,EAAMI,IAAI,SAACC,GAClB,OAAIA,EAAKH,KAAiBD,EACf3M,OAAAuL,EAAA,EAAAvL,CAAA,GAAI+M,EAASF,GAEjBE,aCFEC,EAAW,CACpBC,SAAQ,WAAmF,IAAlFC,EAAW3D,UAAAnL,OAAA,QAAAoG,IAAA+E,UAAA,GAAAA,UAAA,GAAG,EAAG4D,EAAQ5D,UAAAnL,OAAA,QAAAoG,IAAA+E,UAAA,GAAAA,UAAA,GAAG,GAAI6D,EAAY7D,UAAAnL,OAAA,QAAAoG,IAAA+E,UAAA,GAAAA,UAAA,GAAG,GAAI8D,EAAsB9D,UAAAnL,OAAA,QAAAoG,IAAA+E,UAAA,GAAAA,UAAA,GAAG,KACjF,OAAOvK,IAASC,IAAkB,cAAAZ,OAAc6O,EAAW,WAAA7O,OAAU8O,EAAQ,UAAA9O,OAAS+O,IAAqB,OAAXC,EAAkB,GAAE,WAAAhP,OAAcgP,KAC7HnO,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QAEzBkO,OAAM,SAACvO,GACH,OAAOC,IAASuO,KAAI,UAAAlP,OAA4BU,IAAUG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QAE9EoO,SAAQ,SAACzO,GACL,OAAOC,IAASyO,OAAM,UAAApP,OAAWU,IAAUG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,sBCXnEU,EAAA,kBAAArC,GAAA,IAAAA,EAAA,GAAAsC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAC,EAAAC,EAAA5C,GAAA,OAAA8B,OAAAe,eAAAF,EAAAC,EAAA,CAAA5C,QAAA8C,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAL,EAAAC,GAAA,IAAAF,EAAA,aAAAO,GAAAP,EAAA,SAAAC,EAAAC,EAAA5C,GAAA,OAAA2C,EAAAC,GAAA5C,GAAA,SAAAkD,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAArB,qBAAAyB,EAAAJ,EAAAI,EAAAC,EAAA3B,OAAA4B,OAAAH,EAAAxB,WAAA4B,EAAA,IAAAC,EAAAN,GAAA,WAAAG,EAAAI,QAAA,SAAAV,EAAAE,EAAAM,GAAA,IAAAG,EAAA,iCAAAC,EAAAC,GAAA,iBAAAF,EAAA,UAAAG,MAAA,iDAAAH,EAAA,cAAAC,EAAA,MAAAC,EAAA,OAAAE,IAAA,IAAAP,EAAAI,SAAAJ,EAAAK,QAAA,KAAAG,EAAAR,EAAAQ,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAR,GAAA,GAAAS,EAAA,IAAAA,IAAAE,EAAA,gBAAAF,GAAA,YAAAT,EAAAI,OAAAJ,EAAAY,KAAAZ,EAAAa,MAAAb,EAAAK,SAAA,aAAAL,EAAAI,OAAA,uBAAAD,EAAA,MAAAA,EAAA,YAAAH,EAAAK,IAAAL,EAAAc,kBAAAd,EAAAK,SAAA,WAAAL,EAAAI,QAAAJ,EAAAe,OAAA,SAAAf,EAAAK,KAAAF,EAAA,gBAAAa,EAAAC,EAAAzB,EAAAE,EAAAM,GAAA,cAAAgB,EAAAE,KAAA,IAAAf,EAAAH,EAAAmB,KAAA,6BAAAH,EAAAX,MAAAM,EAAA,gBAAAtE,MAAA2E,EAAAX,IAAAc,KAAAnB,EAAAmB,MAAA,UAAAH,EAAAE,OAAAf,EAAA,YAAAH,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,OAAA,CAAAb,EAAAE,EAAAM,GAAAF,EAAA,SAAAmB,EAAAG,EAAApC,EAAAqB,GAAA,WAAAa,KAAA,SAAAb,IAAAe,EAAAC,KAAArC,EAAAqB,IAAA,MAAAf,GAAA,OAAA4B,KAAA,QAAAb,IAAAf,IAAA1D,EAAA2D,OAAA,IAAAoB,EAAA,YAAAd,KAAA,SAAAyB,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzC,EAAAyC,EAAA/C,EAAA,kBAAAgD,OAAA,IAAAC,EAAAvD,OAAAwD,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA1D,GAAAG,EAAAgD,KAAAO,EAAAnD,KAAA+C,EAAAI,GAAA,IAAAE,EAAAP,EAAAnD,UAAAyB,EAAAzB,UAAAD,OAAA4B,OAAAyB,GAAA,SAAAO,EAAA3D,GAAA,0BAAA4D,QAAA,SAAA5B,GAAArB,EAAAX,EAAAgC,EAAA,SAAAC,GAAA,OAAAoB,KAAAvB,QAAAE,EAAAC,OAAA,SAAA4B,EAAAnC,EAAAoC,GAAA,IAAAC,EAAAV,KAAAvB,QAAA,SAAAE,EAAAC,GAAA,SAAA+B,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAnC,EAAAC,EAAAgC,EAAAC,GAAA,IAAAtB,EAAAC,EAAAnB,EAAAM,GAAAN,EAAAO,GAAA,aAAAW,EAAAE,KAAA,KAAAsB,EAAAxB,EAAAX,IAAAhE,EAAAmG,EAAAnG,MAAA,OAAAA,GAAA,iBAAAA,GAAAgC,EAAAgD,KAAAhF,EAAA,WAAA6F,EAAAG,QAAAhG,EAAAoG,SAAApF,KAAA,SAAAhB,GAAAkG,EAAA,OAAAlG,EAAAgG,EAAAC,IAAA,SAAAhD,GAAAiD,EAAA,QAAAjD,EAAA+C,EAAAC,KAAAJ,EAAAG,QAAAhG,GAAAgB,KAAA,SAAAqF,GAAAF,EAAAnG,MAAAqG,EAAAL,EAAAG,IAAA,SAAA1G,GAAA,OAAAyG,EAAA,QAAAzG,EAAAuG,EAAAC,OAAAtB,EAAAX,KAAAkC,CAAAnC,EAAAC,EAAAgC,EAAAC,KAAA,OAAAH,MAAA9E,KAAA+E,UAAA,SAAA1B,EAAAF,EAAAR,GAAA,IAAAI,EAAAI,EAAA9B,SAAAsB,EAAAI,QAAA,QAAAuC,IAAAvC,EAAA,IAAAJ,EAAAQ,SAAA,eAAAR,EAAAI,OAAA,IAAAI,EAAA9B,SAAAkE,SAAA5C,EAAAI,OAAA,SAAAJ,EAAAK,SAAAsC,EAAAjC,EAAAF,EAAAR,GAAA,UAAAA,EAAAI,QAAA,OAAAO,EAAAX,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAwC,UAAA,yDAAAlC,EAAA,IAAAK,EAAAC,EAAAb,EAAAI,EAAA9B,SAAAsB,EAAAK,KAAA,aAAAW,EAAAE,KAAA,OAAAlB,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,IAAAL,EAAAQ,SAAA,KAAAG,EAAA,IAAAmC,EAAA9B,EAAAX,IAAA,OAAAyC,IAAA3B,MAAAnB,EAAAQ,EAAAuC,YAAAD,EAAAzG,MAAA2D,EAAAgD,KAAAxC,EAAAyC,QAAA,WAAAjD,EAAAI,SAAAJ,EAAAI,OAAA,OAAAJ,EAAAK,SAAAsC,GAAA3C,EAAAQ,SAAA,KAAAG,GAAAmC,GAAA9C,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAQ,SAAA,KAAAG,GAAA,SAAAuC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA1B,KAAAgC,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAApC,EAAAoC,EAAAQ,YAAA,GAAA5C,EAAAE,KAAA,gBAAAF,EAAAX,IAAA+C,EAAAQ,WAAA5C,EAAA,SAAAf,EAAAN,GAAA8B,KAAAgC,WAAA,EAAAJ,OAAA,SAAA1D,EAAAqC,QAAAkB,EAAAzB,WAAAoC,OAAA,YAAAhC,EAAAiC,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAArF,GAAA,GAAAsF,EAAA,OAAAA,EAAA1C,KAAAyC,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAvH,QAAA,KAAA0H,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAvH,QAAA,GAAA8B,EAAAgD,KAAAyC,EAAAG,GAAA,OAAAjB,EAAA3G,MAAAyH,EAAAG,GAAAjB,EAAA7B,MAAA,EAAA6B,EAAA,OAAAA,EAAA3G,WAAAsG,EAAAK,EAAA7B,MAAA,EAAA6B,GAAA,OAAAA,UAAA,OAAAA,KAAAzC,GAAA,SAAAA,IAAA,OAAAlE,WAAAsG,EAAAxB,MAAA,UAAAG,EAAAlD,UAAAmD,EAAAxC,EAAA+C,EAAA,cAAAP,GAAAxC,EAAAwC,EAAA,cAAAD,KAAA4C,YAAAnF,EAAAwC,EAAA1C,EAAA,qBAAAjD,EAAAuI,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA/C,GAAA,uBAAA+C,EAAAH,aAAAG,EAAAE,QAAA3I,EAAA4I,KAAA,SAAAJ,GAAA,OAAAjG,OAAAsG,eAAAtG,OAAAsG,eAAAL,EAAA7C,IAAA6C,EAAAM,UAAAnD,EAAAxC,EAAAqF,EAAAvF,EAAA,sBAAAuF,EAAAhG,UAAAD,OAAA4B,OAAA+B,GAAAsC,GAAAxI,EAAA+I,MAAA,SAAAtE,GAAA,OAAAoC,QAAApC,IAAA0B,EAAAE,EAAA7D,WAAAW,EAAAkD,EAAA7D,UAAAO,EAAA,kBAAA8C,OAAA7F,EAAAqG,gBAAArG,EAAAgJ,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAAuC,QAAA,IAAAA,MAAA2C,SAAA,IAAAC,EAAA,IAAA7C,EAAA1C,EAAAC,EAAAC,EAAAC,EAAAC,GAAAuC,GAAA,OAAAtG,EAAAuI,oBAAA1E,GAAAqF,IAAA9B,OAAA3F,KAAA,SAAAmF,GAAA,OAAAA,EAAArB,KAAAqB,EAAAnG,MAAAyI,EAAA9B,UAAAjB,EAAAD,GAAA/C,EAAA+C,EAAAjD,EAAA,aAAAE,EAAA+C,EAAArD,EAAA,kBAAAgD,OAAA1C,EAAA+C,EAAA,mDAAAlG,EAAAmJ,KAAA,SAAAC,GAAA,IAAAD,EAAA,WAAA9F,KAAA+F,EAAAD,EAAArB,KAAAzE,GAAA,OAAA8F,EAAAE,UAAA,SAAAjC,IAAA,KAAA+B,EAAAxI,QAAA,KAAA0C,EAAA8F,EAAAG,MAAA,GAAAjG,KAAA+F,EAAA,OAAAhC,EAAA3G,MAAA4C,EAAA+D,EAAA7B,MAAA,EAAA6B,EAAA,OAAAA,EAAA7B,MAAA,EAAA6B,IAAApH,EAAAiG,SAAA5B,EAAA7B,UAAA,CAAAkG,YAAArE,EAAA4D,MAAA,SAAAsB,GAAA,GAAA1D,KAAA2D,KAAA,EAAA3D,KAAAuB,KAAA,EAAAvB,KAAAb,KAAAa,KAAAZ,WAAA8B,EAAAlB,KAAAN,MAAA,EAAAM,KAAAjB,SAAA,KAAAiB,KAAArB,OAAA,OAAAqB,KAAApB,SAAAsC,EAAAlB,KAAAgC,WAAAzB,QAAA2B,IAAAwB,EAAA,QAAAZ,KAAA9C,KAAA,MAAA8C,EAAAc,OAAA,IAAAhH,EAAAgD,KAAAI,KAAA8C,KAAAP,OAAAO,EAAAe,MAAA,MAAA7D,KAAA8C,QAAA5B,IAAA4C,KAAA,WAAA9D,KAAAN,MAAA,MAAAqE,EAAA/D,KAAAgC,WAAA,GAAAG,WAAA,aAAA4B,EAAAtE,KAAA,MAAAsE,EAAAnF,IAAA,OAAAoB,KAAAgE,MAAA3E,kBAAA,SAAA4E,GAAA,GAAAjE,KAAAN,KAAA,MAAAuE,EAAA,IAAA1F,EAAAyB,KAAA,SAAAkE,EAAAC,EAAAC,GAAA,OAAA7E,EAAAE,KAAA,QAAAF,EAAAX,IAAAqF,EAAA1F,EAAAgD,KAAA4C,EAAAC,IAAA7F,EAAAI,OAAA,OAAAJ,EAAAK,SAAAsC,KAAAkD,EAAA,QAAA5B,EAAAxC,KAAAgC,WAAAlH,OAAA,EAAA0H,GAAA,IAAAA,EAAA,KAAAb,EAAA3B,KAAAgC,WAAAQ,GAAAjD,EAAAoC,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAsC,EAAA,UAAAvC,EAAAC,QAAA5B,KAAA2D,KAAA,KAAAU,EAAAzH,EAAAgD,KAAA+B,EAAA,YAAA2C,EAAA1H,EAAAgD,KAAA+B,EAAA,iBAAA0C,GAAAC,EAAA,IAAAtE,KAAA2D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,MAAA7B,KAAA2D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,iBAAA,GAAAuC,GAAA,GAAArE,KAAA2D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,YAAAyC,EAAA,UAAAzF,MAAA,6CAAAmB,KAAA2D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,gBAAAxC,OAAA,SAAAG,EAAAb,GAAA,QAAA4D,EAAAxC,KAAAgC,WAAAlH,OAAA,EAAA0H,GAAA,IAAAA,EAAA,KAAAb,EAAA3B,KAAAgC,WAAAQ,GAAA,GAAAb,EAAAC,QAAA5B,KAAA2D,MAAA/G,EAAAgD,KAAA+B,EAAA,eAAA3B,KAAA2D,KAAAhC,EAAAG,WAAA,KAAAyC,EAAA5C,EAAA,OAAA4C,IAAA,UAAA9E,GAAA,aAAAA,IAAA8E,EAAA3C,QAAAhD,MAAA2F,EAAAzC,aAAAyC,EAAA,UAAAhF,EAAAgF,IAAApC,WAAA,UAAA5C,EAAAE,OAAAF,EAAAX,MAAA2F,GAAAvE,KAAArB,OAAA,OAAAqB,KAAAuB,KAAAgD,EAAAzC,WAAA5C,GAAAc,KAAAwE,SAAAjF,IAAAiF,SAAA,SAAAjF,EAAAwC,GAAA,aAAAxC,EAAAE,KAAA,MAAAF,EAAAX,IAAA,gBAAAW,EAAAE,MAAA,aAAAF,EAAAE,KAAAO,KAAAuB,KAAAhC,EAAAX,IAAA,WAAAW,EAAAE,MAAAO,KAAAgE,KAAAhE,KAAApB,IAAAW,EAAAX,IAAAoB,KAAArB,OAAA,SAAAqB,KAAAuB,KAAA,kBAAAhC,EAAAE,MAAAsC,IAAA/B,KAAAuB,KAAAQ,GAAA7C,GAAAuF,OAAA,SAAA3C,GAAA,QAAAU,EAAAxC,KAAAgC,WAAAlH,OAAA,EAAA0H,GAAA,IAAAA,EAAA,KAAAb,EAAA3B,KAAAgC,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA9B,KAAAwE,SAAA7C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAzC,IAAAwF,MAAA,SAAA9C,GAAA,QAAAY,EAAAxC,KAAAgC,WAAAlH,OAAA,EAAA0H,GAAA,IAAAA,EAAA,KAAAb,EAAA3B,KAAAgC,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAArC,EAAAoC,EAAAQ,WAAA,aAAA5C,EAAAE,KAAA,KAAAkF,EAAApF,EAAAX,IAAAsD,EAAAP,GAAA,OAAAgD,GAAA,UAAA9F,MAAA,0BAAA+F,cAAA,SAAAvC,EAAAf,EAAAE,GAAA,OAAAxB,KAAAjB,SAAA,CAAA9B,SAAAmD,EAAAiC,GAAAf,aAAAE,WAAA,SAAAxB,KAAArB,SAAAqB,KAAApB,SAAAsC,GAAAhC,IAAA/E,EAWA,IAAI0K,EAAe,CACfuF,MAAO,GACPP,SAAU,GACVQ,gBAAiB,EACjBT,YAAa,EACbU,YAAY,EACZC,oBAAqB,GACrBC,OAAQ,CACJV,KAAM,GACNC,OAAQ,OA8CH7E,EACM,SAACzJ,GAAc,MAAM,CAACgE,KAAM,kBAAmBhE,WADrDyJ,EAEQ,SAACzJ,GAAc,MAAM,CAACgE,KAAM,oBAAqBhE,WAFzDyJ,EAGC,SAACkF,GAAsB,MAAM,CAAC3K,KAAM,qBAAsB2K,UAH3DlF,EAIO,SAAC0E,GAAmB,MAAM,CAACnK,KAAM,4BAA6BmK,gBAJrE1E,EAKE,SAACsF,GAAkB,MAAM,CAAC/K,KAAM,sBAAuBgL,QAASD,IALlEtF,EAMW,SAACmF,GAAuB,MAAM,CAC9C5K,KAAM,iCACNiL,MAAOL,IARFnF,EAUS,SAACoF,GAAmB,MAAM,CAAC7K,KAAM,8BAA+B6K,eAVzEpF,EAWgB,SAACoF,EAAqB7O,GAAc,MAAM,CAC/DgE,KAAM,wCACN6K,aACA7O,WAKKkP,EAAe,SAACC,EACAf,EAAkBW,GAE3C,sBAAA9E,EAAAhJ,OAAAiJ,EAAA,EAAAjJ,CAAAF,IAAAuG,KAAO,SAAA6C,EAAOC,GAAQ,IAAA/J,EAAA,OAAAU,IAAAsB,KAAA,SAAAgI,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAvE,MAAA,OAGiB,OAFnCsE,EAASX,GAAyB,IAClCW,EAASX,EAAuB0F,IAChC/E,EAASX,EAAkBsF,IAAQ1E,EAAAvE,KAAA,EAElBmI,EAASC,SAASiB,EAAMf,EAAUW,EAAOV,KAAMU,EAAOT,QAAO,OAA1EjO,EAAIgK,EAAA3G,KACR0G,EAASX,GAAyB,IAClCW,EAASX,EAAiBpJ,EAAKsN,QAC/BvD,EAASX,EAA2BpJ,EAAK+O,aAAa,wBAAA/E,EAAAhC,SAAA8B,MACzD,gBAAAG,GAAA,OAAAL,EAAAM,MAAAhG,KAAAiG,YATD,IAaE6E,EAAkB,eAAA3E,EAAAzJ,OAAAiJ,EAAA,EAAAjJ,CAAAF,IAAAuG,KAAG,SAAAqD,EAAOP,EACApK,EACAsP,EACAC,GAA+C,OAAAxO,IAAAsB,KAAA,SAAAuI,GAAA,cAAAA,EAAA1C,KAAA0C,EAAA9E,MAAA,OACrB,OAAxDsE,EAASX,GAAgC,EAAMzJ,IAAS4K,EAAA9E,KAAA,EACnCwJ,EAAUtP,GAAO,OAEV,IAFhB4K,EAAAlH,KAECwH,YACTd,EAASmF,EAAcvP,IAE3BoK,EAASX,GAAgC,EAAOzJ,IAAS,wBAAA4K,EAAAvC,SAAAsC,MAC5D,gBAXuBE,EAAAM,EAAAM,EAAAU,GAAA,OAAAzB,EAAAH,MAAAhG,KAAAiG,YAAA,GA6BTgF,EAzGM,WAAkE,IAAjEvM,EAAKuH,UAAAnL,OAAA,QAAAoG,IAAA+E,UAAA,GAAAA,UAAA,GAAGpB,EAAckD,EAAoB9B,UAAAnL,OAAA,EAAAmL,UAAA,QAAA/E,EAC5D,OAAQ6G,EAAOtI,MACX,IAAK,kBACD,OAAO/C,OAAAuL,EAAA,EAAAvL,CAAA,GACAgC,EAAK,CACR0L,MAAOjB,EAAoBzK,EAAM0L,MAAOrC,EAAOtM,OAAQ,KAAM,CAACyP,UAAU,MAEhF,IAAK,oBACD,OAAOxO,OAAAuL,EAAA,EAAAvL,CAAA,GACAgC,EAAK,CACR0L,MAAOjB,EAAoBzK,EAAM0L,MAAOrC,EAAOtM,OAAQ,KAAM,CAACyP,UAAU,MAEhF,IAAK,qBACD,OAAOxO,OAAAuL,EAAA,EAAAvL,CAAA,GAAIgC,EAAK,CAAE0L,MAAOrC,EAAOqC,QAEpC,IAAK,4BACD,OAAO1N,OAAAuL,EAAA,EAAAvL,CAAA,GAAIgC,EAAK,CAAEkL,YAAa7B,EAAO6B,cAE1C,IAAK,sBACD,OAAOlN,OAAAuL,EAAA,EAAAvL,CAAA,GAAIgC,EAAK,CAAE8L,OAAQzC,EAAO0C,UAErC,IAAK,iCACD,OAAO/N,OAAAuL,EAAA,EAAAvL,CAAA,GAAIgC,EAAK,CAAE2L,gBAAiBtC,EAAO2C,QAE9C,IAAK,8BACD,OAAOhO,OAAAuL,EAAA,EAAAvL,CAAA,GAAIgC,EAAK,CAAE4L,WAAYvC,EAAOuC,aAEzC,IAAK,wCACD,OAAO5N,OAAAuL,EAAA,EAAAvL,CAAA,GACAgC,EAAK,CACR6L,oBAAqBxC,EAAOuC,WAAU,GAAAvP,OAAA2B,OAAAwL,EAAA,EAAAxL,CAC5BgC,EAAM6L,qBAAmB,CAAExC,EAAOtM,SACtCiD,EAAM6L,oBAAoBC,OAAO,SAAAzF,GAAE,OAAIA,IAAOgD,EAAOtM,WAGnE,QACI,OAAOiD,YC/CNyM,EACP,WACE,OAAOzP,IAASC,IAAG,WAAiDC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QAF/EqP,EAIJ,SAACC,EAAeC,GAAsE,IAApDC,EAAUrF,UAAAnL,OAAA,QAAAoG,IAAA+E,UAAA,IAAAA,UAAA,GAAUsF,EAAuBtF,UAAAnL,OAAA,QAAAoG,IAAA+E,UAAA,GAAAA,UAAA,GAAG,KACjF,OAAOvK,IAASuO,KAAI,aAA0F,CAACmB,QAAOC,WAAUC,aAAYC,YACvI3P,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QANhBqP,EAQH,WACF,OAAOzP,IAASyO,OAAM,eClBjBqB,EACI,WACT,OAAO9P,IAASC,IAAG,4BAAwDC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,qBCPnG2P,EAAA,kBAAAtR,GAAA,IAAAA,EAAA,GAAAsC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAC,EAAAC,EAAA5C,GAAA,OAAA8B,OAAAe,eAAAF,EAAAC,EAAA,CAAA5C,QAAA8C,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAL,EAAAC,GAAA,IAAAF,EAAA,aAAAO,GAAAP,EAAA,SAAAC,EAAAC,EAAA5C,GAAA,OAAA2C,EAAAC,GAAA5C,GAAA,SAAAkD,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAArB,qBAAAyB,EAAAJ,EAAAI,EAAAC,EAAA3B,OAAA4B,OAAAH,EAAAxB,WAAA4B,EAAA,IAAAC,EAAAN,GAAA,WAAAG,EAAAI,QAAA,SAAAV,EAAAE,EAAAM,GAAA,IAAAG,EAAA,iCAAAC,EAAAC,GAAA,iBAAAF,EAAA,UAAAG,MAAA,iDAAAH,EAAA,cAAAC,EAAA,MAAAC,EAAA,OAAAE,IAAA,IAAAP,EAAAI,SAAAJ,EAAAK,QAAA,KAAAG,EAAAR,EAAAQ,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAR,GAAA,GAAAS,EAAA,IAAAA,IAAAE,EAAA,gBAAAF,GAAA,YAAAT,EAAAI,OAAAJ,EAAAY,KAAAZ,EAAAa,MAAAb,EAAAK,SAAA,aAAAL,EAAAI,OAAA,uBAAAD,EAAA,MAAAA,EAAA,YAAAH,EAAAK,IAAAL,EAAAc,kBAAAd,EAAAK,SAAA,WAAAL,EAAAI,QAAAJ,EAAAe,OAAA,SAAAf,EAAAK,KAAAF,EAAA,gBAAAa,EAAAC,EAAAzB,EAAAE,EAAAM,GAAA,cAAAgB,EAAAE,KAAA,IAAAf,EAAAH,EAAAmB,KAAA,6BAAAH,EAAAX,MAAAM,EAAA,gBAAAtE,MAAA2E,EAAAX,IAAAc,KAAAnB,EAAAmB,MAAA,UAAAH,EAAAE,OAAAf,EAAA,YAAAH,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,OAAA,CAAAb,EAAAE,EAAAM,GAAAF,EAAA,SAAAmB,EAAAG,EAAApC,EAAAqB,GAAA,WAAAa,KAAA,SAAAb,IAAAe,EAAAC,KAAArC,EAAAqB,IAAA,MAAAf,GAAA,OAAA4B,KAAA,QAAAb,IAAAf,IAAA1D,EAAA2D,OAAA,IAAAoB,EAAA,YAAAd,KAAA,SAAAyB,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzC,EAAAyC,EAAA/C,EAAA,kBAAAgD,OAAA,IAAAC,EAAAvD,OAAAwD,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA1D,GAAAG,EAAAgD,KAAAO,EAAAnD,KAAA+C,EAAAI,GAAA,IAAAE,EAAAP,EAAAnD,UAAAyB,EAAAzB,UAAAD,OAAA4B,OAAAyB,GAAA,SAAAO,EAAA3D,GAAA,0BAAA4D,QAAA,SAAA5B,GAAArB,EAAAX,EAAAgC,EAAA,SAAAC,GAAA,OAAAoB,KAAAvB,QAAAE,EAAAC,OAAA,SAAA4B,EAAAnC,EAAAoC,GAAA,IAAAC,EAAAV,KAAAvB,QAAA,SAAAE,EAAAC,GAAA,SAAA+B,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAnC,EAAAC,EAAAgC,EAAAC,GAAA,IAAAtB,EAAAC,EAAAnB,EAAAM,GAAAN,EAAAO,GAAA,aAAAW,EAAAE,KAAA,KAAAsB,EAAAxB,EAAAX,IAAAhE,EAAAmG,EAAAnG,MAAA,OAAAA,GAAA,iBAAAA,GAAAgC,EAAAgD,KAAAhF,EAAA,WAAA6F,EAAAG,QAAAhG,EAAAoG,SAAApF,KAAA,SAAAhB,GAAAkG,EAAA,OAAAlG,EAAAgG,EAAAC,IAAA,SAAAhD,GAAAiD,EAAA,QAAAjD,EAAA+C,EAAAC,KAAAJ,EAAAG,QAAAhG,GAAAgB,KAAA,SAAAqF,GAAAF,EAAAnG,MAAAqG,EAAAL,EAAAG,IAAA,SAAA1G,GAAA,OAAAyG,EAAA,QAAAzG,EAAAuG,EAAAC,OAAAtB,EAAAX,KAAAkC,CAAAnC,EAAAC,EAAAgC,EAAAC,KAAA,OAAAH,MAAA9E,KAAA+E,UAAA,SAAA1B,EAAAF,EAAAR,GAAA,IAAAI,EAAAI,EAAA9B,SAAAsB,EAAAI,QAAA,QAAAuC,IAAAvC,EAAA,IAAAJ,EAAAQ,SAAA,eAAAR,EAAAI,OAAA,IAAAI,EAAA9B,SAAAkE,SAAA5C,EAAAI,OAAA,SAAAJ,EAAAK,SAAAsC,EAAAjC,EAAAF,EAAAR,GAAA,UAAAA,EAAAI,QAAA,OAAAO,EAAAX,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAwC,UAAA,yDAAAlC,EAAA,IAAAK,EAAAC,EAAAb,EAAAI,EAAA9B,SAAAsB,EAAAK,KAAA,aAAAW,EAAAE,KAAA,OAAAlB,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,IAAAL,EAAAQ,SAAA,KAAAG,EAAA,IAAAmC,EAAA9B,EAAAX,IAAA,OAAAyC,IAAA3B,MAAAnB,EAAAQ,EAAAuC,YAAAD,EAAAzG,MAAA2D,EAAAgD,KAAAxC,EAAAyC,QAAA,WAAAjD,EAAAI,SAAAJ,EAAAI,OAAA,OAAAJ,EAAAK,SAAAsC,GAAA3C,EAAAQ,SAAA,KAAAG,GAAAmC,GAAA9C,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAQ,SAAA,KAAAG,GAAA,SAAAuC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA1B,KAAAgC,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAApC,EAAAoC,EAAAQ,YAAA,GAAA5C,EAAAE,KAAA,gBAAAF,EAAAX,IAAA+C,EAAAQ,WAAA5C,EAAA,SAAAf,EAAAN,GAAA8B,KAAAgC,WAAA,EAAAJ,OAAA,SAAA1D,EAAAqC,QAAAkB,EAAAzB,WAAAoC,OAAA,YAAAhC,EAAAiC,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAArF,GAAA,GAAAsF,EAAA,OAAAA,EAAA1C,KAAAyC,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAvH,QAAA,KAAA0H,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAvH,QAAA,GAAA8B,EAAAgD,KAAAyC,EAAAG,GAAA,OAAAjB,EAAA3G,MAAAyH,EAAAG,GAAAjB,EAAA7B,MAAA,EAAA6B,EAAA,OAAAA,EAAA3G,WAAAsG,EAAAK,EAAA7B,MAAA,EAAA6B,GAAA,OAAAA,UAAA,OAAAA,KAAAzC,GAAA,SAAAA,IAAA,OAAAlE,WAAAsG,EAAAxB,MAAA,UAAAG,EAAAlD,UAAAmD,EAAAxC,EAAA+C,EAAA,cAAAP,GAAAxC,EAAAwC,EAAA,cAAAD,KAAA4C,YAAAnF,EAAAwC,EAAA1C,EAAA,qBAAAjD,EAAAuI,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA/C,GAAA,uBAAA+C,EAAAH,aAAAG,EAAAE,QAAA3I,EAAA4I,KAAA,SAAAJ,GAAA,OAAAjG,OAAAsG,eAAAtG,OAAAsG,eAAAL,EAAA7C,IAAA6C,EAAAM,UAAAnD,EAAAxC,EAAAqF,EAAAvF,EAAA,sBAAAuF,EAAAhG,UAAAD,OAAA4B,OAAA+B,GAAAsC,GAAAxI,EAAA+I,MAAA,SAAAtE,GAAA,OAAAoC,QAAApC,IAAA0B,EAAAE,EAAA7D,WAAAW,EAAAkD,EAAA7D,UAAAO,EAAA,kBAAA8C,OAAA7F,EAAAqG,gBAAArG,EAAAgJ,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAAuC,QAAA,IAAAA,MAAA2C,SAAA,IAAAC,EAAA,IAAA7C,EAAA1C,EAAAC,EAAAC,EAAAC,EAAAC,GAAAuC,GAAA,OAAAtG,EAAAuI,oBAAA1E,GAAAqF,IAAA9B,OAAA3F,KAAA,SAAAmF,GAAA,OAAAA,EAAArB,KAAAqB,EAAAnG,MAAAyI,EAAA9B,UAAAjB,EAAAD,GAAA/C,EAAA+C,EAAAjD,EAAA,aAAAE,EAAA+C,EAAArD,EAAA,kBAAAgD,OAAA1C,EAAA+C,EAAA,mDAAAlG,EAAAmJ,KAAA,SAAAC,GAAA,IAAAD,EAAA,WAAA9F,KAAA+F,EAAAD,EAAArB,KAAAzE,GAAA,OAAA8F,EAAAE,UAAA,SAAAjC,IAAA,KAAA+B,EAAAxI,QAAA,KAAA0C,EAAA8F,EAAAG,MAAA,GAAAjG,KAAA+F,EAAA,OAAAhC,EAAA3G,MAAA4C,EAAA+D,EAAA7B,MAAA,EAAA6B,EAAA,OAAAA,EAAA7B,MAAA,EAAA6B,IAAApH,EAAAiG,SAAA5B,EAAA7B,UAAA,CAAAkG,YAAArE,EAAA4D,MAAA,SAAAsB,GAAA,GAAA1D,KAAA2D,KAAA,EAAA3D,KAAAuB,KAAA,EAAAvB,KAAAb,KAAAa,KAAAZ,WAAA8B,EAAAlB,KAAAN,MAAA,EAAAM,KAAAjB,SAAA,KAAAiB,KAAArB,OAAA,OAAAqB,KAAApB,SAAAsC,EAAAlB,KAAAgC,WAAAzB,QAAA2B,IAAAwB,EAAA,QAAAZ,KAAA9C,KAAA,MAAA8C,EAAAc,OAAA,IAAAhH,EAAAgD,KAAAI,KAAA8C,KAAAP,OAAAO,EAAAe,MAAA,MAAA7D,KAAA8C,QAAA5B,IAAA4C,KAAA,WAAA9D,KAAAN,MAAA,MAAAqE,EAAA/D,KAAAgC,WAAA,GAAAG,WAAA,aAAA4B,EAAAtE,KAAA,MAAAsE,EAAAnF,IAAA,OAAAoB,KAAAgE,MAAA3E,kBAAA,SAAA4E,GAAA,GAAAjE,KAAAN,KAAA,MAAAuE,EAAA,IAAA1F,EAAAyB,KAAA,SAAAkE,EAAAC,EAAAC,GAAA,OAAA7E,EAAAE,KAAA,QAAAF,EAAAX,IAAAqF,EAAA1F,EAAAgD,KAAA4C,EAAAC,IAAA7F,EAAAI,OAAA,OAAAJ,EAAAK,SAAAsC,KAAAkD,EAAA,QAAA5B,EAAAxC,KAAAgC,WAAAlH,OAAA,EAAA0H,GAAA,IAAAA,EAAA,KAAAb,EAAA3B,KAAAgC,WAAAQ,GAAAjD,EAAAoC,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAsC,EAAA,UAAAvC,EAAAC,QAAA5B,KAAA2D,KAAA,KAAAU,EAAAzH,EAAAgD,KAAA+B,EAAA,YAAA2C,EAAA1H,EAAAgD,KAAA+B,EAAA,iBAAA0C,GAAAC,EAAA,IAAAtE,KAAA2D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,MAAA7B,KAAA2D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,iBAAA,GAAAuC,GAAA,GAAArE,KAAA2D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,YAAAyC,EAAA,UAAAzF,MAAA,6CAAAmB,KAAA2D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,gBAAAxC,OAAA,SAAAG,EAAAb,GAAA,QAAA4D,EAAAxC,KAAAgC,WAAAlH,OAAA,EAAA0H,GAAA,IAAAA,EAAA,KAAAb,EAAA3B,KAAAgC,WAAAQ,GAAA,GAAAb,EAAAC,QAAA5B,KAAA2D,MAAA/G,EAAAgD,KAAA+B,EAAA,eAAA3B,KAAA2D,KAAAhC,EAAAG,WAAA,KAAAyC,EAAA5C,EAAA,OAAA4C,IAAA,UAAA9E,GAAA,aAAAA,IAAA8E,EAAA3C,QAAAhD,MAAA2F,EAAAzC,aAAAyC,EAAA,UAAAhF,EAAAgF,IAAApC,WAAA,UAAA5C,EAAAE,OAAAF,EAAAX,MAAA2F,GAAAvE,KAAArB,OAAA,OAAAqB,KAAAuB,KAAAgD,EAAAzC,WAAA5C,GAAAc,KAAAwE,SAAAjF,IAAAiF,SAAA,SAAAjF,EAAAwC,GAAA,aAAAxC,EAAAE,KAAA,MAAAF,EAAAX,IAAA,gBAAAW,EAAAE,MAAA,aAAAF,EAAAE,KAAAO,KAAAuB,KAAAhC,EAAAX,IAAA,WAAAW,EAAAE,MAAAO,KAAAgE,KAAAhE,KAAApB,IAAAW,EAAAX,IAAAoB,KAAArB,OAAA,SAAAqB,KAAAuB,KAAA,kBAAAhC,EAAAE,MAAAsC,IAAA/B,KAAAuB,KAAAQ,GAAA7C,GAAAuF,OAAA,SAAA3C,GAAA,QAAAU,EAAAxC,KAAAgC,WAAAlH,OAAA,EAAA0H,GAAA,IAAAA,EAAA,KAAAb,EAAA3B,KAAAgC,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA9B,KAAAwE,SAAA7C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAzC,IAAAwF,MAAA,SAAA9C,GAAA,QAAAY,EAAAxC,KAAAgC,WAAAlH,OAAA,EAAA0H,GAAA,IAAAA,EAAA,KAAAb,EAAA3B,KAAAgC,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAArC,EAAAoC,EAAAQ,WAAA,aAAA5C,EAAAE,KAAA,KAAAkF,EAAApF,EAAAX,IAAAsD,EAAAP,GAAA,OAAAgD,GAAA,UAAA9F,MAAA,0BAAA+F,cAAA,SAAAvC,EAAAf,EAAAE,GAAA,OAAAxB,KAAAjB,SAAA,CAAA9B,SAAAmD,EAAAiC,GAAAf,aAAAE,WAAA,SAAAxB,KAAArB,SAAAqB,KAAApB,SAAAsC,GAAAhC,IAAA/E,EAaA,IAAI0K,EAAe,CACfpJ,OAAQ,KACR2P,MAAO,KACPM,MAAO,KACPC,QAAQ,EACRC,WAAY,MAmBH1G,EAEG,SAACzJ,EAAuB2P,EAAsBM,EAAsBC,GAAe,MAAM,CACrGlM,KAAM,wBAAyBgL,QAC3B,CAAChP,SAAQ2P,QAAOM,QAAOC,YAJlBzG,EAQQ,SAAC0G,GAAkB,MAAM,CAC1CnM,KAAM,kCAAmCgL,QAAS,CAACmB,gBAI1CC,EAAkB,WAAH,sBAAAnG,EAAAhJ,OAAAiJ,EAAA,EAAAjJ,CAAA+O,IAAA1I,KAAmB,SAAA6C,EAAOC,GAAa,IAAAiG,EAAAC,EAAAhH,EAAAiH,EAAAZ,EAAA,OAAAK,IAAA3N,KAAA,SAAAgI,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAvE,MAAA,cAAAuE,EAAAvE,KAAA,EAC5C4J,IAAY,QAA3BW,EAAMhG,EAAA3G,MAECwH,aAAeiC,IAAWqD,UAASF,EACjBD,EAAOhQ,KAA3BiJ,EAAEgH,EAAFhH,GAAI2G,EAAKK,EAALL,MAAON,EAAKW,EAALX,MAChBvF,EAASX,EAAwBH,EAAIqG,EAAOM,GAAO,KACtD,wBAAA5F,EAAAhC,SAAA8B,MACJ,gBAAAG,GAAA,OAAAL,EAAAM,MAAAhG,KAAAiG,YAP2B,IAuBfiG,EAAgB,WAAH,sBAAA1F,EAAA9J,OAAAiJ,EAAA,EAAAjJ,CAAA+O,IAAA1I,KAAoB,SAAA0D,EAAOZ,GAAY,IAAA/J,EAAA8P,EAAA,OAAAH,IAAA3N,KAAA,SAAA4I,GAAA,cAAAA,EAAA/C,KAAA+C,EAAAnF,MAAA,cAAAmF,EAAAnF,KAAA,EAC1CiK,IAA2B,OAAxC1P,EAAI4K,EAAAvH,KACJyM,EAAa9P,EAAKqQ,IACpBtG,EAASX,EAA6B0G,IAAa,wBAAAlF,EAAA5C,SAAA2C,MACtD,gBAAAG,GAAA,OAAAJ,EAAAR,MAAAhG,KAAAiG,YAJqB,IAcXmG,EAhEK,WAAgE,IAA/D1N,EAAKuH,UAAAnL,OAAA,QAAAoG,IAAA+E,UAAA,GAAAA,UAAA,GAAGpB,EAAckD,EAAmB9B,UAAAnL,OAAA,EAAAmL,UAAA,QAAA/E,EAE1D,OADAmL,QAAQC,IAAIvE,GACJA,EAAOtI,MACX,IAAK,wBACL,IAAK,kCACD,OAAO/C,OAAAuL,EAAA,EAAAvL,CAAA,GACAgC,EACAqJ,EAAO0C,SAElB,QACI,OAAO/L,mCCjCnB6N,EAAA,kBAAApS,GAAA,IAAAA,EAAA,GAAAsC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAC,EAAAC,EAAA5C,GAAA,OAAA8B,OAAAe,eAAAF,EAAAC,EAAA,CAAA5C,QAAA8C,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAL,EAAAC,GAAA,IAAAF,EAAA,aAAAO,GAAAP,EAAA,SAAAC,EAAAC,EAAA5C,GAAA,OAAA2C,EAAAC,GAAA5C,GAAA,SAAAkD,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAArB,qBAAAyB,EAAAJ,EAAAI,EAAAC,EAAA3B,OAAA4B,OAAAH,EAAAxB,WAAA4B,EAAA,IAAAC,EAAAN,GAAA,WAAAG,EAAAI,QAAA,SAAAV,EAAAE,EAAAM,GAAA,IAAAG,EAAA,iCAAAC,EAAAC,GAAA,iBAAAF,EAAA,UAAAG,MAAA,iDAAAH,EAAA,cAAAC,EAAA,MAAAC,EAAA,OAAAE,IAAA,IAAAP,EAAAI,SAAAJ,EAAAK,QAAA,KAAAG,EAAAR,EAAAQ,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAR,GAAA,GAAAS,EAAA,IAAAA,IAAAE,EAAA,gBAAAF,GAAA,YAAAT,EAAAI,OAAAJ,EAAAY,KAAAZ,EAAAa,MAAAb,EAAAK,SAAA,aAAAL,EAAAI,OAAA,uBAAAD,EAAA,MAAAA,EAAA,YAAAH,EAAAK,IAAAL,EAAAc,kBAAAd,EAAAK,SAAA,WAAAL,EAAAI,QAAAJ,EAAAe,OAAA,SAAAf,EAAAK,KAAAF,EAAA,gBAAAa,EAAAC,EAAAzB,EAAAE,EAAAM,GAAA,cAAAgB,EAAAE,KAAA,IAAAf,EAAAH,EAAAmB,KAAA,6BAAAH,EAAAX,MAAAM,EAAA,gBAAAtE,MAAA2E,EAAAX,IAAAc,KAAAnB,EAAAmB,MAAA,UAAAH,EAAAE,OAAAf,EAAA,YAAAH,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,OAAA,CAAAb,EAAAE,EAAAM,GAAAF,EAAA,SAAAmB,EAAAG,EAAApC,EAAAqB,GAAA,WAAAa,KAAA,SAAAb,IAAAe,EAAAC,KAAArC,EAAAqB,IAAA,MAAAf,GAAA,OAAA4B,KAAA,QAAAb,IAAAf,IAAA1D,EAAA2D,OAAA,IAAAoB,EAAA,YAAAd,KAAA,SAAAyB,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzC,EAAAyC,EAAA/C,EAAA,kBAAAgD,OAAA,IAAAC,EAAAvD,OAAAwD,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA1D,GAAAG,EAAAgD,KAAAO,EAAAnD,KAAA+C,EAAAI,GAAA,IAAAE,EAAAP,EAAAnD,UAAAyB,EAAAzB,UAAAD,OAAA4B,OAAAyB,GAAA,SAAAO,EAAA3D,GAAA,0BAAA4D,QAAA,SAAA5B,GAAArB,EAAAX,EAAAgC,EAAA,SAAAC,GAAA,OAAAoB,KAAAvB,QAAAE,EAAAC,OAAA,SAAA4B,EAAAnC,EAAAoC,GAAA,IAAAC,EAAAV,KAAAvB,QAAA,SAAAE,EAAAC,GAAA,SAAA+B,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAnC,EAAAC,EAAAgC,EAAAC,GAAA,IAAAtB,EAAAC,EAAAnB,EAAAM,GAAAN,EAAAO,GAAA,aAAAW,EAAAE,KAAA,KAAAsB,EAAAxB,EAAAX,IAAAhE,EAAAmG,EAAAnG,MAAA,OAAAA,GAAA,iBAAAA,GAAAgC,EAAAgD,KAAAhF,EAAA,WAAA6F,EAAAG,QAAAhG,EAAAoG,SAAApF,KAAA,SAAAhB,GAAAkG,EAAA,OAAAlG,EAAAgG,EAAAC,IAAA,SAAAhD,GAAAiD,EAAA,QAAAjD,EAAA+C,EAAAC,KAAAJ,EAAAG,QAAAhG,GAAAgB,KAAA,SAAAqF,GAAAF,EAAAnG,MAAAqG,EAAAL,EAAAG,IAAA,SAAA1G,GAAA,OAAAyG,EAAA,QAAAzG,EAAAuG,EAAAC,OAAAtB,EAAAX,KAAAkC,CAAAnC,EAAAC,EAAAgC,EAAAC,KAAA,OAAAH,MAAA9E,KAAA+E,UAAA,SAAA1B,EAAAF,EAAAR,GAAA,IAAAI,EAAAI,EAAA9B,SAAAsB,EAAAI,QAAA,QAAAuC,IAAAvC,EAAA,IAAAJ,EAAAQ,SAAA,eAAAR,EAAAI,OAAA,IAAAI,EAAA9B,SAAAkE,SAAA5C,EAAAI,OAAA,SAAAJ,EAAAK,SAAAsC,EAAAjC,EAAAF,EAAAR,GAAA,UAAAA,EAAAI,QAAA,OAAAO,EAAAX,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAwC,UAAA,yDAAAlC,EAAA,IAAAK,EAAAC,EAAAb,EAAAI,EAAA9B,SAAAsB,EAAAK,KAAA,aAAAW,EAAAE,KAAA,OAAAlB,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,IAAAL,EAAAQ,SAAA,KAAAG,EAAA,IAAAmC,EAAA9B,EAAAX,IAAA,OAAAyC,IAAA3B,MAAAnB,EAAAQ,EAAAuC,YAAAD,EAAAzG,MAAA2D,EAAAgD,KAAAxC,EAAAyC,QAAA,WAAAjD,EAAAI,SAAAJ,EAAAI,OAAA,OAAAJ,EAAAK,SAAAsC,GAAA3C,EAAAQ,SAAA,KAAAG,GAAAmC,GAAA9C,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAQ,SAAA,KAAAG,GAAA,SAAAuC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA1B,KAAAgC,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAApC,EAAAoC,EAAAQ,YAAA,GAAA5C,EAAAE,KAAA,gBAAAF,EAAAX,IAAA+C,EAAAQ,WAAA5C,EAAA,SAAAf,EAAAN,GAAA8B,KAAAgC,WAAA,EAAAJ,OAAA,SAAA1D,EAAAqC,QAAAkB,EAAAzB,WAAAoC,OAAA,YAAAhC,EAAAiC,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAArF,GAAA,GAAAsF,EAAA,OAAAA,EAAA1C,KAAAyC,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAvH,QAAA,KAAA0H,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAvH,QAAA,GAAA8B,EAAAgD,KAAAyC,EAAAG,GAAA,OAAAjB,EAAA3G,MAAAyH,EAAAG,GAAAjB,EAAA7B,MAAA,EAAA6B,EAAA,OAAAA,EAAA3G,WAAAsG,EAAAK,EAAA7B,MAAA,EAAA6B,GAAA,OAAAA,UAAA,OAAAA,KAAAzC,GAAA,SAAAA,IAAA,OAAAlE,WAAAsG,EAAAxB,MAAA,UAAAG,EAAAlD,UAAAmD,EAAAxC,EAAA+C,EAAA,cAAAP,GAAAxC,EAAAwC,EAAA,cAAAD,KAAA4C,YAAAnF,EAAAwC,EAAA1C,EAAA,qBAAAjD,EAAAuI,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA/C,GAAA,uBAAA+C,EAAAH,aAAAG,EAAAE,QAAA3I,EAAA4I,KAAA,SAAAJ,GAAA,OAAAjG,OAAAsG,eAAAtG,OAAAsG,eAAAL,EAAA7C,IAAA6C,EAAAM,UAAAnD,EAAAxC,EAAAqF,EAAAvF,EAAA,sBAAAuF,EAAAhG,UAAAD,OAAA4B,OAAA+B,GAAAsC,GAAAxI,EAAA+I,MAAA,SAAAtE,GAAA,OAAAoC,QAAApC,IAAA0B,EAAAE,EAAA7D,WAAAW,EAAAkD,EAAA7D,UAAAO,EAAA,kBAAA8C,OAAA7F,EAAAqG,gBAAArG,EAAAgJ,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAAuC,QAAA,IAAAA,MAAA2C,SAAA,IAAAC,EAAA,IAAA7C,EAAA1C,EAAAC,EAAAC,EAAAC,EAAAC,GAAAuC,GAAA,OAAAtG,EAAAuI,oBAAA1E,GAAAqF,IAAA9B,OAAA3F,KAAA,SAAAmF,GAAA,OAAAA,EAAArB,KAAAqB,EAAAnG,MAAAyI,EAAA9B,UAAAjB,EAAAD,GAAA/C,EAAA+C,EAAAjD,EAAA,aAAAE,EAAA+C,EAAArD,EAAA,kBAAAgD,OAAA1C,EAAA+C,EAAA,mDAAAlG,EAAAmJ,KAAA,SAAAC,GAAA,IAAAD,EAAA,WAAA9F,KAAA+F,EAAAD,EAAArB,KAAAzE,GAAA,OAAA8F,EAAAE,UAAA,SAAAjC,IAAA,KAAA+B,EAAAxI,QAAA,KAAA0C,EAAA8F,EAAAG,MAAA,GAAAjG,KAAA+F,EAAA,OAAAhC,EAAA3G,MAAA4C,EAAA+D,EAAA7B,MAAA,EAAA6B,EAAA,OAAAA,EAAA7B,MAAA,EAAA6B,IAAApH,EAAAiG,SAAA5B,EAAA7B,UAAA,CAAAkG,YAAArE,EAAA4D,MAAA,SAAAsB,GAAA,GAAA1D,KAAA2D,KAAA,EAAA3D,KAAAuB,KAAA,EAAAvB,KAAAb,KAAAa,KAAAZ,WAAA8B,EAAAlB,KAAAN,MAAA,EAAAM,KAAAjB,SAAA,KAAAiB,KAAArB,OAAA,OAAAqB,KAAApB,SAAAsC,EAAAlB,KAAAgC,WAAAzB,QAAA2B,IAAAwB,EAAA,QAAAZ,KAAA9C,KAAA,MAAA8C,EAAAc,OAAA,IAAAhH,EAAAgD,KAAAI,KAAA8C,KAAAP,OAAAO,EAAAe,MAAA,MAAA7D,KAAA8C,QAAA5B,IAAA4C,KAAA,WAAA9D,KAAAN,MAAA,MAAAqE,EAAA/D,KAAAgC,WAAA,GAAAG,WAAA,aAAA4B,EAAAtE,KAAA,MAAAsE,EAAAnF,IAAA,OAAAoB,KAAAgE,MAAA3E,kBAAA,SAAA4E,GAAA,GAAAjE,KAAAN,KAAA,MAAAuE,EAAA,IAAA1F,EAAAyB,KAAA,SAAAkE,EAAAC,EAAAC,GAAA,OAAA7E,EAAAE,KAAA,QAAAF,EAAAX,IAAAqF,EAAA1F,EAAAgD,KAAA4C,EAAAC,IAAA7F,EAAAI,OAAA,OAAAJ,EAAAK,SAAAsC,KAAAkD,EAAA,QAAA5B,EAAAxC,KAAAgC,WAAAlH,OAAA,EAAA0H,GAAA,IAAAA,EAAA,KAAAb,EAAA3B,KAAAgC,WAAAQ,GAAAjD,EAAAoC,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAsC,EAAA,UAAAvC,EAAAC,QAAA5B,KAAA2D,KAAA,KAAAU,EAAAzH,EAAAgD,KAAA+B,EAAA,YAAA2C,EAAA1H,EAAAgD,KAAA+B,EAAA,iBAAA0C,GAAAC,EAAA,IAAAtE,KAAA2D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,MAAA7B,KAAA2D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,iBAAA,GAAAuC,GAAA,GAAArE,KAAA2D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,YAAAyC,EAAA,UAAAzF,MAAA,6CAAAmB,KAAA2D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,gBAAAxC,OAAA,SAAAG,EAAAb,GAAA,QAAA4D,EAAAxC,KAAAgC,WAAAlH,OAAA,EAAA0H,GAAA,IAAAA,EAAA,KAAAb,EAAA3B,KAAAgC,WAAAQ,GAAA,GAAAb,EAAAC,QAAA5B,KAAA2D,MAAA/G,EAAAgD,KAAA+B,EAAA,eAAA3B,KAAA2D,KAAAhC,EAAAG,WAAA,KAAAyC,EAAA5C,EAAA,OAAA4C,IAAA,UAAA9E,GAAA,aAAAA,IAAA8E,EAAA3C,QAAAhD,MAAA2F,EAAAzC,aAAAyC,EAAA,UAAAhF,EAAAgF,IAAApC,WAAA,UAAA5C,EAAAE,OAAAF,EAAAX,MAAA2F,GAAAvE,KAAArB,OAAA,OAAAqB,KAAAuB,KAAAgD,EAAAzC,WAAA5C,GAAAc,KAAAwE,SAAAjF,IAAAiF,SAAA,SAAAjF,EAAAwC,GAAA,aAAAxC,EAAAE,KAAA,MAAAF,EAAAX,IAAA,gBAAAW,EAAAE,MAAA,aAAAF,EAAAE,KAAAO,KAAAuB,KAAAhC,EAAAX,IAAA,WAAAW,EAAAE,MAAAO,KAAAgE,KAAAhE,KAAApB,IAAAW,EAAAX,IAAAoB,KAAArB,OAAA,SAAAqB,KAAAuB,KAAA,kBAAAhC,EAAAE,MAAAsC,IAAA/B,KAAAuB,KAAAQ,GAAA7C,GAAAuF,OAAA,SAAA3C,GAAA,QAAAU,EAAAxC,KAAAgC,WAAAlH,OAAA,EAAA0H,GAAA,IAAAA,EAAA,KAAAb,EAAA3B,KAAAgC,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA9B,KAAAwE,SAAA7C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAzC,IAAAwF,MAAA,SAAA9C,GAAA,QAAAY,EAAAxC,KAAAgC,WAAAlH,OAAA,EAAA0H,GAAA,IAAAA,EAAA,KAAAb,EAAA3B,KAAAgC,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAArC,EAAAoC,EAAAQ,WAAA,aAAA5C,EAAAE,KAAA,KAAAkF,EAAApF,EAAAX,IAAAsD,EAAAP,GAAA,OAAAgD,GAAA,UAAA9F,MAAA,0BAAA+F,cAAA,SAAAvC,EAAAf,EAAAE,GAAA,OAAAxB,KAAAjB,SAAA,CAAA9B,SAAAmD,EAAAiC,GAAAf,aAAAE,WAAA,SAAAxB,KAAArB,SAAAqB,KAAApB,SAAAsC,GAAAhC,IAAA/E,EAKA,IAAI0K,EAAe,CACf2H,aAAa,GAmBJtH,EACW,iBAAO,CAACzF,KAAM,+BAavBgN,EA3BI,WAA+D,IAA9D/N,EAAKuH,UAAAnL,OAAA,QAAAoG,IAAA+E,UAAA,GAAAA,UAAA,GAAGpB,EACxB,QADwDoB,UAAAnL,OAAA,EAAAmL,UAAA,QAAA/E,GACzCzB,MACX,IAAK,6BACD,OAAO/C,OAAAuL,EAAA,EAAAvL,CAAA,GACAgC,EAAK,CACR8N,aAAa,IAErB,QACI,OAAO9N,ICXfgO,EAAcC,YAAgB,CAC9BC,YAAa9E,IACb+E,YAAavE,IACbwE,QAAS5D,EACT6D,UAAW9B,EACXzD,KAAM4E,EACNY,KAAMC,IACNC,IAAKT,IAcHU,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAQC,YAAYd,EAAaS,EAAiBM,YAAgBC,OAGxEN,OAAOO,UAAYJ,EAEJA,0GClCFK,GAAiB,WAC1B,OAAOC,gBCCEC,GAAqDC,sDCiD3CC,GAzCc,SAAHtI,GAM9B,IALuG,IADpEuI,EAAevI,EAAfuI,gBAAiBpE,EAAQnE,EAARmE,SAAQqE,EAAAxI,EACtBkE,mBAAW,IAAAsE,EAAG,EAACA,EAAAC,EAAAzI,EAAE0I,qBAAa,IAAAD,EAAG,aAAQA,EAAAE,EAAA3I,EAAE4I,mBAAW,IAAAD,EAAG,GAAEA,EAE7FE,EAAaC,KAAKC,KAAKR,EAAkBpE,GAEzC6E,EAAQ,GACHlM,EAAI,EAAGA,GAAK+L,EAAY/L,IAC7BkM,EAAMzM,KAAKO,GAGf,IAAImM,EAAeH,KAAKC,KAAKF,EAAaD,GAAYM,EACdC,mBAAS,GAAEC,EAAApS,OAAAqS,EAAA,EAAArS,CAAAkS,EAAA,GAA9CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GAChCI,GAAyBF,EAAgB,GAAKV,EAAc,EAC5Da,EAAyBH,EAAgBV,EAE7C,OAAOc,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAMrU,WACxB6T,EAAgB,GACbI,EAAAC,EAAAC,cAAA,UAAQG,QAAS,WAAOR,EAAiBD,EAAgB,KAAI,QAI5DN,EACIlE,OAAO,SAAAI,GAAI,OAAIA,GAAQsE,GAAyBtE,GAAQuE,IACxD3F,IAAI,SAACoB,GACN,OAAOwE,EAAAC,EAAAC,cAAA,QAAMC,UAAWG,KAAGhT,OAAAe,GAAA,EAAAf,CAAA,GAC1B8S,KAAMnU,aAAgBuO,IAAgBgB,GACxC4E,KAAMpU,YACLoC,IAAKoN,EACQ6E,QAAS,WACLrB,EAAcxD,KACdA,KAGxB+D,EAAeK,GACZI,EAAAC,EAAAC,cAAA,UAAQG,QAAS,WAAOR,EAAiBD,EAAgB,KAAI,oDCQ1DW,GAxCoB,SAAHjK,GAAsD,IAAjD+D,EAAI/D,EAAJ+D,KAAMc,EAAmB7E,EAAnB6E,oBAAqBL,EAAQxE,EAARwE,SAAUF,EAAMtE,EAANsE,OACtE,OACIoF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACM,GAAA,EAAO,CAACC,GAAI,YAAcpG,EAAK1E,IAChCqK,EAAAC,EAAAC,cAAA,OAAKQ,IAA0B,MAArBrG,EAAKjE,OAAOuK,MAAgBtG,EAAKjE,OAAOuK,MAAQpH,KAAW4G,UAAWC,KAAM7G,cAG9FyG,EAAAC,EAAAC,cAAA,WACK7F,EAAKyB,SACAkE,EAAAC,EAAAC,cAAA,UAAQU,SAAUzF,EACf0F,KAAK,SAAAlL,GAAE,OAAIA,IAAO0E,EAAK1E,KAClB0K,QAAS,WACLvF,EAAST,EAAK1E,MAChB,YAEVqK,EAAAC,EAAAC,cAAA,UAAQU,SAAUzF,EACf0F,KAAK,SAAAlL,GAAE,OAAIA,IAAO0E,EAAK1E,KAClB0K,QAAS,WACLzF,EAAOP,EAAK1E,MACd,YAIpBqK,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,WAAM7F,EAAK3G,MACXsM,EAAAC,EAAAC,cAAA,WAAM7F,EAAK1N,SAEnBqT,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,WAAM,yBACFF,EAAAC,EAAAC,cAAA,WAAM,8CCxCT3F,GAAWuG,aAJC,SAACxR,GACtB,OAAOA,EAAMqO,UAAU3C,OAIvB,SAACA,GACD,OAAOA,EAAMI,OAAO,SAAA2F,GAAC,OAAI,MAGhBC,GAAc,SAAC1R,GACxB,OAAQA,EAAMqO,UAAUlD,UAEfwG,GAAqB,SAAC3R,GAC/B,OAAQA,EAAMqO,UAAU1C,iBAGfiG,GAAiB,SAAC5R,GAC3B,OAAQA,EAAMqO,UAAUnD,aAGf2G,GAAgB,SAAC7R,GAC1B,OAAQA,EAAMqO,UAAUzC,YAGfkG,GAAyB,SAAC9R,GACnC,OAAQA,EAAMqO,UAAUxC,qBAGfkG,GAAiB,SAAC/R,GAC3B,OAAQA,EAAMqO,UAAUvC,QCzBtBkG,GAA0B,SAACtQ,GAE7B,MADe,IAiBNuQ,GAAuCC,IAAMC,KAAK,SAACC,GAChE,IAAMtG,EAASuD,aAAY0C,IAa3B,OAAOrB,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAACyB,GAAA,EAAM,CACHC,oBAAkB,EAClBC,cAAe,CAACnH,KAAMU,EAAOV,KAAMC,OAAQmH,OAAO1G,EAAOT,SACzDoH,SAAUT,GACVU,SAjBW,SAAChR,EAAgBsF,GAAuE,IAApE2L,EAAa3L,EAAb2L,cAEzB7G,EAAqB,CAC/BV,KAAM1J,EAAO0J,KACbC,OAA0B,SAAlB3J,EAAO2J,OAAoB,KAAyB,SAAlB3J,EAAO2J,QAI7C+G,EAAMQ,gBAAgB9G,GACtB6G,GAAc,KAUb,SAAAlL,GAAA,IAAGoL,EAAYpL,EAAZoL,aAAY,OACZnC,EAAAC,EAAAC,cAACyB,GAAA,EAAI,KACD3B,EAAAC,EAAAC,cAACyB,GAAA,EAAK,CAACtR,KAAK,OAAOqD,KAAK,SAExBsM,EAAAC,EAAAC,cAACyB,GAAA,EAAK,CAACjO,KAAK,SAAS0O,GAAG,UACpBpC,EAAAC,EAAAC,cAAA,UAAQ1U,MAAM,QAAM,OACpBwU,EAAAC,EAAAC,cAAA,UAAQ1U,MAAM,QAAM,iBACpBwU,EAAAC,EAAAC,cAAA,UAAQ1U,MAAM,SAAO,oBAEzBwU,EAAAC,EAAAC,cAAA,UAAQ7P,KAAM,SAASuQ,SAAUuB,GAAa,cCkC/C5B,GAnEqB,WAEhC,IAAMtF,EAAkB0D,aAAYsC,IAC9BzG,EAAcmE,aAAYuC,IAC1BzG,EAAWkE,aAAYqC,IACvBhG,EAAQ2D,aAAYpE,IACpBa,EAASuD,aAAY0C,IACrBlG,EAAsBwD,aAAYyC,IAElC3K,EAAW+H,KAAgB6D,EAEKC,eAAiBC,EAAAjV,OAAAqS,EAAA,EAAArS,CAAA+U,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE5BG,EAAaF,EAAajW,IAAI,SAAW,GAEzCoW,IAAsBH,EAAajW,IAAI,gBAAkB,KAEzDqW,EAA8C,SAA/BJ,EAAajW,IAAI,UAAuB,KAAOsW,QAAQL,EAAajW,IAAI,WAE7FuW,oBAAU,WACNrM,EAAS8E,EAAaoH,EAAmBlI,EAAU,CAACC,KAAMgI,EAAY/H,OAAQiI,MAC/E,IAEHE,oBAAU,WACNL,EAAgB,CAAC/H,KAAMU,EAAOV,KAAMC,OAAQmH,OAAO1G,EAAOT,QAASH,YAAasH,OAAOtH,MACxF,CAACY,EAAQZ,IAIZ,IAQMuI,EAAY,SAAC1W,GACfoK,EZwDc,SAACpK,GACnB,sBAAA+K,EAAA9J,OAAAiJ,EAAA,EAAAjJ,CAAAF,IAAAuG,KAAO,SAAA0D,EAAOZ,GAAQ,OAAArJ,IAAAsB,KAAA,SAAA4I,GAAA,cAAAA,EAAA/C,KAAA+C,EAAAnF,MAAA,cAAAmF,EAAAnF,KAAA,EACZuJ,EAAmBjF,EAAUpK,EAAQiO,EAASM,OAAOoI,KAAK1I,GAAWxE,GAAsB,wBAAAwB,EAAA5C,SAAA2C,MACpG,gBAAAoB,GAAA,OAAArB,EAAAR,MAAAhG,KAAAiG,YAFD,GYzDa+D,CAAOvO,KAGd4W,EAAc,SAAC5W,GACjBoK,EZ2DgB,SAACpK,GACrB,sBAAAsL,EAAArK,OAAAiJ,EAAA,EAAAjJ,CAAAF,IAAAuG,KAAO,SAAAiE,EAAOnB,GAAQ,OAAArJ,IAAAsB,KAAA,SAAAmJ,GAAA,cAAAA,EAAAtD,KAAAsD,EAAA1F,MAAA,cAAA0F,EAAA1F,KAAA,EACZuJ,EAAmBjF,EAAUpK,EAAQiO,EAASQ,SAASkI,KAAK1I,GAAWxE,GAAwB,wBAAA+B,EAAAnD,SAAAkD,MACxG,gBAAAsL,GAAA,OAAAvL,EAAAf,MAAAhG,KAAAiG,YAFD,GY5DaiE,CAASzO,KAKtB,OAAO2T,EAAAC,EAAAC,cAAA,WAEHF,EAAAC,EAAAC,cAACqB,GAAe,CAACW,gBAhBG,SAAC9G,GACrB3E,EAAS8E,EAAa,EAAEd,EAAUW,OAiBlC4E,EAAAC,EAAAC,cAACiD,GAAS,CAAC3I,YAAaA,EAAawE,cAtBnB,SAAChT,GACnByK,EAAS8E,EAAavP,EAAYyO,EAAUW,KAsBjCyD,gBAAiB5D,EAAiBR,SAAUA,IACxDuF,EAAAC,EAAAC,cAAA,WAEKlF,EAAMZ,IAAI,SAAAC,GAAI,OAAI2F,EAAAC,EAAAC,cAACkD,GAAI,CAAC/I,KAAMA,EACNc,oBAAqBA,EACrB/M,IAAKiM,EAAK1E,GACVmF,SAAUmI,EACVrI,OAAQmI,SCtE/BM,GAAyC,SAAC3B,GACnD,IAAMxG,EAAayD,aAAYwC,IAC3B,OAAOnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqD,SAAA,KACHtD,EAAAC,EAAAC,cAAA,UAAKwB,EAAM6B,WACVrI,EAAa8E,EAAAC,EAAAC,cAACsD,GAAA,EAAS,MAAK,KAC7BxD,EAAAC,EAAAC,cAACuD,GAAK,0DCsBZC,GAAiBC,aAAsD,CAAC/F,KAAM,SAA7D+F,CArB4F,SAAHrN,GAA0C,IAArCsN,EAAYtN,EAAZsN,aAAc3Y,EAAKqL,EAALrL,MAAOuR,EAAUlG,EAAVkG,WACtI,OACIwD,EAAAC,EAAAC,cAAA,QAAM8B,SAAU4B,GACXC,aAAqC,QAAS,QAAS,CAACvY,MAAWwY,KAAO,GAAI,iLAC9ED,aAAqC,WAAY,WAAY,CAACvY,MAAWwY,KAAO,CAACzT,KAAM,YAAa,yKACpGwT,kBAAqC/R,EAAW,aAAc,GAAIgS,KAAO,CAACzT,KAAM,YAAa,eAE7FmM,GAAcwD,EAAAC,EAAAC,cAAA,OAAKQ,IAAKlE,IACxBA,GAAcqH,aAAqC,qBAAsB,UAAW,CAACvY,MAAWwY,KAAO,IAEvG7Y,GAAS+U,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAMlV,kBAC3BD,GAGL+U,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQE,MAAO,CAAC2D,WAAY,SAAQ,aAoBvCC,GAAkB,WAE3B,IAAMzH,EAASoC,aAAY,SAACrP,GAAmB,OAAKA,EAAM8I,KAAKmE,SACzDC,EAAamC,aAAY,SAACrP,GAAmB,OAAKA,EAAM8I,KAAKoE,aAE9D/F,EAAW+H,KAOhB,OAAIjC,EACOyD,EAAAC,EAAAC,cAAC+D,GAAA,EAAQ,CAACxD,GAAI,aAIlBT,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACwD,GAAc,CAAC1B,SAZH,SAAClV,GXCD,IAACkP,EAAeC,EAAkBC,EAAqBC,EWApE1F,GXAcuF,EWAClP,EAASkP,MXAKC,EWAEnP,EAASmP,SXAOC,EWAGpP,EAASoP,WXASC,EWAGrP,EAASqP,QXAG,eAAApF,EAAAzJ,OAAAiJ,EAAA,EAAAjJ,CAAA+O,IAAA1I,KAAgB,SAAAqD,EAAOP,GAAQ,IAAAyN,EAAAtO,EAAA,OAAAyG,IAAA3N,KAAA,SAAAuI,GAAA,cAAAA,EAAA1C,KAAA0C,EAAA9E,MAAA,cAAA8E,EAAA9E,KAAA,EAEhG4J,EAAcC,EAAOC,EAAUC,EAAYC,GAAQ,OAA5D,IAAT+H,EAASjN,EAAAlH,MACCwH,aAAeiC,IAAWqD,QAAO,CAAA5F,EAAA9E,KAAA,eAAA8E,EAAA9E,KAAA,EACrCsE,EAASgG,KAAkB,OAAAxF,EAAA9E,KAAA,mBAE7B+R,EAAU3M,aAAekC,IAAqB0K,kBAAiB,CAAAlN,EAAA9E,KAAA,gBAAA8E,EAAA9E,KAAA,GACzDsE,EAASqG,KAAgB,QAE/BlH,EAAUsO,EAAU3L,SAAS7M,OAAS,EAAIwY,EAAU3L,SAAS,GAAK,aACtE9B,EAAS4B,YAAW,QAAS,CAACC,OAAQ1C,KAAW,yBAAAqB,EAAAvC,SAAAsC,MAExD,gBAAAE,GAAA,OAAAH,EAAAH,MAAAhG,KAAAiG,YAZ0F,MWW/C2F,WAAYA,oHCrE3C4H,GAAe,SAAC9U,GACzB,OAAQA,EAAM8I,KAAKmE,QAGV8H,GAAqB,SAAC/U,GAC/B,OAAQA,EAAM8I,KAAKkE,OCMVgI,GAAkC,WAE/C,IAAM/H,EAASmC,GAAe0F,IACpB9H,EAAQoC,GAAe2F,IAEvB5N,EAAW+H,KAMV8F,EAAUC,KAAVD,OAGME,EACTC,KAAMC,WADNC,MAASH,iBAGb,OAAQxE,EAAAC,EAAAC,cAACoE,EAAM,CAACnE,UAAWC,KAAMlU,OAAQkU,MAAO,CAAEwE,QAAS,EAAGC,WAAYL,IACrEjI,EACKyD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqD,SAAA,KACEtD,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,KAAMjU,QAAO,UAC9B6T,EAAAC,EAAAC,cAAC4E,GAAA,EAAM,CAACC,IAAKzI,GAAS,GAAI8D,MAAO,CAAC4E,gBAAiB,UAAWC,OAAQ,QAASC,MAAM,SAASC,KAAMnF,EAAAC,EAAAC,cAACkF,GAAA,EAAY,QACjHpF,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAC2D,WAAY,SAAUzH,GACpC0D,EAAAC,EAAAC,cAACmF,GAAA,EAAM,CAACjF,MAAO,CAACkF,WAAY,QAAQjF,QAhBzB,WACvB5J,Eb4De,eAAAkB,EAAArK,OAAAiJ,EAAA,EAAAjJ,CAAA+O,IAAA1I,KAAoB,SAAAiE,EAAOnB,GAAa,OAAA4F,IAAA3N,KAAA,SAAAmJ,GAAA,cAAAA,EAAAtD,KAAAsD,EAAA1F,MAAA,cAAA0F,EAAA1F,KAAA,EAClC4J,IAAgB,OACJ,IADrBlE,EAAA9H,KACCrD,KAAK6K,YACdd,EAASX,EAAwB,KAAM,KAAM,MAAM,IACtD,wBAAA+B,EAAAnD,SAAAkD,MACJ,gBAAAE,GAAA,OAAAH,EAAAf,MAAAhG,KAAAiG,YALkB,Ma7CyD,YAE9DmJ,EAAAC,EAAAC,cAACmF,GAAA,EAAM,KACLrF,EAAAC,EAAAC,cAACM,GAAA,EAAI,CAACC,GAAI,UAAS,YCtB7B8E,GAAmBC,eAAK,kBAAMra,EAAAsa,EAAA,GAAAjZ,KAAArB,EAAA6X,KAAA,aAC9B0C,GAAmBF,eAAK,kBAAMra,EAAAsa,EAAA,GAAAjZ,KAAArB,EAAA6X,KAAA,aAc3B2C,GAA2BpB,KAA3BoB,QAASC,GAAkBrB,KAAlBqB,OAAQC,GAAUtB,KAAVsB,MAI1B,SAASC,GACLC,EACA3X,EACA+W,EACAa,GAEA,MAAO,CACH5X,MACA+W,OACAa,WACAD,SAIR,IA7BwBE,GA6BlBjM,GAAoB,CACtB8L,GAAQ,aAAc,IAAK9F,EAAAC,EAAAC,cAACM,GAAA,EAAI,CAACC,GAAG,YAAWT,EAAAC,EAAAC,cAACkF,GAAA,EAAY,QAC5DU,GAAQ,UAAW,IAAK9F,EAAAC,EAAAC,cAACM,GAAA,EAAI,CAACC,GAAG,YAAWT,EAAAC,EAAAC,cAACgG,GAAA,EAAe,QAC5DJ,GAAQ,QAAS,IAAK9F,EAAAC,EAAAC,cAACM,GAAA,EAAI,CAACC,GAAG,UAAST,EAAAC,EAAAC,cAACiG,GAAA,EAAY,SAqE1CC,IArGSH,GAqCF,WAAM,IAAAzG,EAEUC,oBAAS,GAAKC,EAAApS,OAAAqS,EAAA,EAAArS,CAAAkS,EAAA,GAAzC6G,EAAS3G,EAAA,GAAE4G,EAAY5G,EAAA,GAIxBtC,EAAcsB,GAAe,SAACpP,GAAK,OAAKA,EAAMwO,IAAIV,cAClD3G,EAAW+H,KACX+H,EAA0B,SAACd,GAC7Be,MAAM,wBAWV,OAPA1D,oBAAU,WAGN,OAFArM,Eb1CkB,eAAAH,EAAAhJ,OAAAiJ,EAAA,EAAAjJ,CAAA6P,IAAAxJ,KAAoB,SAAA6C,EAAOC,GAAa,IAAAgQ,EAAA,OAAAtJ,IAAAzO,KAAA,SAAAgI,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAvE,MAAA,OAC9DsU,EAAUhQ,EAASgG,KACnBzI,QAAQ0S,IAAI,CAACD,IACRja,KAAK,WACFiK,EAASX,OACX,wBAAAY,EAAAhC,SAAA8B,MACT,gBAAAG,GAAA,OAAAL,EAAAM,MAAAhG,KAAAiG,YANyB,Ia2ClBmH,OAAO2I,iBAAiB,qBAAsBJ,GACvC,WAAOvI,OAAO4I,oBAAoB,qBAAsBL,KAChE,IAGEnJ,EAMD4C,EAAAC,EAAAC,cAAC2G,GAAA,EAAM,CAAC1G,UAAWC,KAAMxU,WACrBoU,EAAAC,EAAAC,cAAC2F,GAAK,CAACiB,aAAW,EAACT,UAAWA,EAAWU,WAAY,SAACvb,GAAK,OAAK8a,EAAa9a,KACzEwU,EAAAC,EAAAC,cAAA,OAAKQ,IAAI,oEAAoEP,UAAWC,KAAMvU,MAC1FmU,EAAAC,EAAAC,cAAC8G,GAAA,EAAI,CAACvC,MAAM,OAAOwC,KAAK,SAASjN,MAAOA,MAEhDgG,EAAAC,EAAAC,cAAC2G,GAAA,EAAM,CAAC1G,UAAU,cAAcC,MAAO,CAAC8G,QAAS,OAAQC,cAAe,WACpEnH,EAAAC,EAAAC,cAACkH,GAAM,MACPpH,EAAAC,EAAAC,cAACyF,GAAO,CAACvF,MAAO,CAAE6E,OAAQ,WACtBjF,EAAAC,EAAAC,cAAC+D,GAAA,EAAM,KACajE,EAAAC,EAAAC,cAAC+D,GAAA,EAAK,CAACoD,KAAK,IACLC,QAAStH,EAAAC,EAAAC,cAAC+D,GAAA,EAAQ,CAACxD,GAAI,eAC9BT,EAAAC,EAAAC,cAAC+D,GAAA,EAAK,CAACoD,KAAK,mBACLC,QAAStH,EAAAC,EAAAC,cAACqF,GAAgB,QACjCvF,EAAAC,EAAAC,cAAC+D,GAAA,EAAK,CAACoD,KAAK,WACLC,QAAStH,EAAAC,EAAAC,cAACF,EAAAC,EAAMsH,SAAQ,CAACC,SAAUxH,EAAAC,EAAAC,cAACsD,GAAA,EAAS,OAAIxD,EAAAC,EAAAC,cAACqF,GAAgB,SACzEvF,EAAAC,EAAAC,cAAC+D,GAAA,EAAK,CAACoD,KAAK,WACLC,QAAStH,EAAAC,EAAAC,cAACF,EAAAC,EAAMsH,SAAQ,CAACC,SAAUxH,EAAAC,EAAAC,cAACsD,GAAA,EAAS,OAAIxD,EAAAC,EAAAC,cAACwF,GAAgB,SACzE1F,EAAAC,EAAAC,cAAC+D,GAAA,EAAK,CAACoD,KAAK,WAELC,QAAStH,EAAAC,EAAAC,cAACuH,GAAS,CAAClE,UAAW,+EACrCvD,EAAAC,EAAAC,cAAC+D,GAAA,EAAK,CAACoD,KAAK,SACLC,QAAStH,EAAAC,EAAAC,cAACwH,GAAK,QACvB1H,EAAAC,EAAAC,cAAC+D,GAAA,EAAK,CAACoD,KAAK,IACLC,QAAStH,EAAAC,EAAAC,cAAA,gCAIxCF,EAAAC,EAAAC,cAAC0F,GAAM,CAACzF,UAAWC,KAAMtU,QAAO,wDAhCjCkU,EAAAC,EAAAC,cAACsD,GAAA,EAAS,OA1D2B,SAAC9B,GACjD,IAAMiG,EAASC,eACf,OACI5H,EAAAC,EAAAC,cAAC+F,GAAgB3Y,OAAAua,OAAA,GACTnG,EAAK,CACTiG,OAAQA,OClBPG,IAASC,WAAWC,SAASC,eAAe,SAEhDC,OACDlI,EAAAC,EAAAC,cAACF,EAAAC,EAAMkI,WAAU,KACbnI,EAAAC,EAAAC,cAACM,GAAA,EAAa,KACdR,EAAAC,EAAAC,cAACkI,GAAA,EAAQ,CAACjK,MAAOA,GACb6B,EAAAC,EAAAC,cAACmI,GAAG,mMCAdC,EAAgD,SAAHhS,GAA2C,IAAAiS,EAAAjS,EAAtCkS,KAAOC,EAAOF,EAAPE,QAASxd,EAAKsd,EAALtd,MAAO+a,EAAQ1P,EAAR0P,SACzE0C,EAAWD,GAAWxd,EAC5B,OACI0d,EAAA1I,EAAAC,cAAA,OAAKC,UAAWC,IAAMpV,YAAc,KAAO0d,EAAWtI,IAAMnV,MAAQ,KAChE0d,EAAA1I,EAAAC,cAAA,WACK8F,GAEH0C,GAAYC,EAAA1I,EAAAC,cAAA,YAAOjV,KAOhB2d,EAAwC,SAAClH,GAAU,IACrDmH,EAA6BnH,EAA7BmH,MAAgBC,GAAapH,EAAtB8G,KAAkBlb,OAAAyb,EAAA,EAAAzb,CAAIoU,EAAK,mBACzC,OAAOiH,EAAA1I,EAAAC,cAACoI,EAAiB5G,EAAOiH,EAAA1I,EAAAC,cAAA,WAAA5S,OAAAua,OAAA,GAAcgB,EAAWC,MAGhDhF,EAAqC,SAACpC,GAAU,IAClDmH,EAA6BnH,EAA7BmH,MAAgBC,GAAapH,EAAtB8G,KAAkBlb,OAAAyb,EAAA,EAAAzb,CAAIoU,EAAK,mBACzC,OAAOiH,EAAA1I,EAAAC,cAACoI,EAAiB5G,EAAOiH,EAAA1I,EAAAC,cAAA,QAAA5S,OAAAua,OAAA,GAAWgB,EAAWC,MAGnD,SAASjF,EAAyCmF,EAC7BtV,EACAuV,EACAC,GACuB,IAAvBxH,EAAK7K,UAAAnL,OAAA,QAAAoG,IAAA+E,UAAA,GAAAA,UAAA,GAAG,GAAIsS,EAAItS,UAAAnL,OAAA,QAAAoG,IAAA+E,UAAA,GAAAA,UAAA,GAAG,GAC3C,OAAO8R,EAAA1I,EAAAC,cAAA,WACHyI,EAAA1I,EAAAC,cAACkJ,EAAA,EAAK9b,OAAAua,OAAA,CAACmB,YAAaA,EAAatV,KAAMA,EAChCwV,UAAWA,EACXnH,SAAUkH,GACNvH,IACT,IAAEyH,qCChDZ,IAAAE,EAAAle,EAAA,GAAAme,EAAAne,EAAAoe,EAAAF,GAAAG,EAAAre,EAAA,KAAAse,EAAAte,EAAAoe,EAAAC,GAOehG,IAJG,WACd,OAAO8F,EAAArJ,EAAAC,cAAA,OAAKQ,IAAKgJ","file":"static/js/main.dd78b8f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__1G2qu\",\"error\":\"FormsControl_error___VgMl\",\"formSummaryError\":\"FormsControl_formSummaryError___fvLQ\"};","\r\nexport type FieldValidatorType = (value: string) => string | undefined\r\n\r\n\r\nexport const required:FieldValidatorType = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number):FieldValidatorType => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layoutOne\":\"App_layoutOne__33zIP\",\"img\":\"App_img__kOizf\",\"footer\":\"App_footer__3VFjd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__x0mhg\",\"pageNumber\":\"Paginator_pageNumber__2JOOY\",\"selectedPage\":\"Paginator_selectedPage__jKTEu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1T5dH\",\"aurora\":\"Header_aurora__3fjaC\"};","import {PhotosType, ProfileType} from \"../types/types\";\r\nimport {APIResponseType, instance} from \"./api\";\r\n\r\ntype SavePhotoResponseType = {\r\n    photos: PhotosType\r\n}\r\n\r\n\r\nexport const profileApi = {\r\n    getProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/` + userId).then(res => res.data)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>('profile/status/' + userId).then(res => res.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>('profile/status', {status: status}).then(res => res.data)\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData()\r\n        formData.append('image', photoFile)\r\n\r\n        return instance.put<APIResponseType<SavePhotoResponseType>>('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res => res.data);\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<APIResponseType>(`profile`, profile).then(res => res.data)\r\n    }\r\n}","import {FormAction, stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\nimport {profileApi} from \"../api/profile-api\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi,how are you?', likesCount: 14},\r\n        {id: 2, message: 'Its my first post', likesCount: 43},\r\n        {id: 3, message: 'Blabla', likesCount: 42},\r\n        {id: 4, message: 'Dada', likesCount: 43}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: ''\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AN/PROFILE/ADD-POST': {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case 'AN/PROFILE/SET_USER_PROFILE': {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case 'AN/PROFILE/SET_STATUS': {\r\n            return {...state, status: action.status}\r\n        }\r\n        case 'AN/PROFILE/SAVE_PHOTO_SUCCESS': {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const actions = {\r\n\r\n addPost: (newPostText: string) => ({type: 'AN/PROFILE/ADD-POST', newPostText} as const),\r\n\r\n\r\n\r\n setUserProfile: (profile: ProfileType) => ({type: 'AN/PROFILE/SET_USER_PROFILE', profile} as const),\r\n\r\n\r\n\r\nsetStatus: (status: string)  => ({type: 'AN/PROFILE/SET_STATUS', status} as const),\r\n\r\n\r\nsavePhotoSuccess: (photos: PhotosType)  => ({type: 'AN/PROFILE/SAVE_PHOTO_SUCCESS', photos} as const)\r\n}\r\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    const data = await profileApi.getProfile(userId)\r\n    dispatch(actions.setUserProfile(data));\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileApi.getStatus(userId)\r\n    dispatch(actions.setStatus(data));\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    let data = await profileApi.updateStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actions.setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    let data = await profileApi.savePhoto(file)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actions.savePhotoSuccess(data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const data = await profileApi.saveProfile(profile)\r\n\r\n    if (data.resultCode === 0) {\r\n        if (userId != null) {\r\n        await dispatch(getUserProfile(userId));\r\n            } else {\r\n            throw new Error('userId cant be null')\r\n        }\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: data.messages[0]}))\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import {InferActionsTypes} from \"./redux-store\";\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\ntype DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ntype MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Nikita'},\r\n        {id: 2, name: 'Sveta'},\r\n        {id: 3, name: 'Danil'},\r\n        {id: 4, name: 'Vlad'},\r\n        {id: 5, name: 'Yarik'},\r\n        {id: 6, name: 'Slava'}\r\n        ] as Array<DialogsType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'How do you do?'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: `let's go for a walk?`}\r\n    ] as Array<MessagesType>\r\n};\r\n\r\n\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AN/DIALOGS/SEND-MESSAGE':\r\n            let body = action.newMessageBody\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const  actions= {\r\n    sendMessage:(newMessageBody: string) => ({type: 'AN/DIALOGS/SEND-MESSAGE', newMessageBody} as const)\r\n}\r\n\r\n\r\nexport default dialogsReducer","module.exports = __webpack_public_path__ + \"static/media/icon-256x256.23dc8d23.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.3f259006.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__jNbP0\",\"selectedPage\":\"Users_selectedPage__3MEF7\"};","import axios from \"axios\"\r\nimport {UserType} from \"../types/types\"\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'ddb53878-a138-494f-a8f1-858c444acf6a'\r\n    }\r\n})\r\n\r\n\r\nexport enum ResultCode {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport enum ResultCodeForCaptcha {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type GetItemsType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCode> = {\r\n    data: D\r\n    messages: Array<string>\r\n    resultCode: RC\r\n}\r\n\r\n\r\n\r\n\r\n","\r\nlet initialState = {\r\n\r\n}\r\n\r\ntype InitialState = typeof initialState\r\n\r\nconst sidebarReducer = (state = initialState, action:any): InitialState=> {\r\nreturn state\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((user: any) => {\r\n    if (user[objPropName] === itemId) {\r\n        return {...user, ...newObjProps}\r\n    }\r\n    return user;\r\n})\r\n}\r\n\r\nexport const outputDateSeconds = () => {\r\n    const date = new Date()\r\n    let output = String(\r\n        date.getHours()\r\n        + ':' + date.getMinutes()\r\n        + ':' + date.getSeconds()\r\n        + ':' + date.getMilliseconds()\r\n    )\r\n    output = output + ''\r\n    return output\r\n}","import {GetItemsType, instance, APIResponseType} from \"./api\"\r\n\r\n\r\nexport const usersApi = {\r\n    getUsers(currentPage = 1, pageSize = 20, term: string = '', friend: null | boolean = null) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? '' : `&friend=${friend}`))\r\n            .then(res => res.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post<APIResponseType>(`follow/${userId}`).then(res => res.data)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`).then(res => res.data) as Promise<APIResponseType>\r\n    }\r\n}","import {updateObjectInArray} from \"../utils/object-helpers\";\r\nimport {UserType} from \"../types/types\";\r\nimport {Dispatch} from \"redux\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {usersApi} from \"../api/users-api\";\r\nimport {APIResponseType} from \"../api/api\";\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\nexport type FilterType = typeof initialState.filter\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>,//number of users ids\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AN/USERS/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case 'AN/USERS/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case 'AN/USERS/SET_USERS': {\r\n            return {...state, users: action.users}\r\n        }\r\n        case 'AN/USERS/SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'AN/USERS/SET_FILTER' : {\r\n            return {...state, filter: action.payload}\r\n        }\r\n        case 'AN/USERS/SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case 'AN/USERS/TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'AN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    followSuccess: (userId: number) => ({type: 'AN/USERS/FOLLOW', userId} as const),\r\n    unfollowSuccess: (userId: number) => ({type: 'AN/USERS/UNFOLLOW', userId} as const),\r\n    setUsers: (users: Array<UserType>) => ({type: 'AN/USERS/SET_USERS', users} as const),\r\n    setCurrentPage: (currentPage: number) => ({type: 'AN/USERS/SET_CURRENT_PAGE', currentPage} as const),\r\n    setFilter: (filter: FilterType) => ({type: 'AN/USERS/SET_FILTER', payload: filter} as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({\r\n        type: 'AN/USERS/SET_TOTAL_USERS_COUNT',\r\n        count: totalUsersCount\r\n    } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: 'AN/USERS/TOGGLE_IS_FETCHING', isFetching} as const),\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => ({\r\n        type: 'AN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n        isFetching,\r\n        userId\r\n    } as const)\r\n}\r\n\r\n\r\nexport const requestUsers = (page: number,\r\n                             pageSize: number, filter: FilterType): ThunkType => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(actions.toggleIsFetching(true))\r\n        dispatch(actions.setCurrentPage(page))\r\n        dispatch(actions.setFilter(filter))\r\n\r\n        let data = await usersApi.getUsers(page, pageSize, filter.term, filter.friend)\r\n        dispatch(actions.toggleIsFetching(false));\r\n        dispatch(actions.setUsers(data.items));\r\n        dispatch(actions.setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch: Dispatch<ActionsTypes>,\r\n                                  userId: number,\r\n                                  apiMethod: (userId: number) => Promise<APIResponseType>,\r\n                                  actionCreator: (userId: number) => ActionsTypes) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(actions.toggleFollowingProgress(false, userId));\r\n}\r\n\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersApi.follow.bind(usersApi), actions.followSuccess)\r\n    }\r\n\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersApi.unfollow.bind(usersApi), actions.unfollowSuccess)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default usersReducer;","import {instance, ResultCode, ResultCodeForCaptcha} from \"./api\"\r\n\r\nimport {APIResponseType} from \"./api\"\r\n\r\n\r\ntype MeResponseDataType = {\r\n        id: number\r\n        email: string\r\n        login: string\r\n}\r\n\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}\r\n\r\nexport const authApi = {\r\n    me() {\r\n        return instance.get<APIResponseType<MeResponseDataType>>(`auth/me`).then(res => res.data)\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | boolean = null) {\r\n        return instance.post<APIResponseType<LoginResponseDataType, ResultCode | ResultCodeForCaptcha>>(`auth/login`, {email, password, rememberMe, captcha})\r\n            .then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}","import {instance} from \"./api\";\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const securityApi = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`).then(res => res.data)\r\n    }\r\n}","import {ResultCode, ResultCodeForCaptcha} from '../api/api'\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {authApi} from \"../api/auth-api\";\r\nimport {securityApi} from \"../api/security-api\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\n\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | ReturnType<typeof stopSubmit>>\r\n\r\n\r\n\r\nlet initialState = {\r\n    userId: null as (number | null),\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null,\r\n};\r\n\r\n\r\n\r\nconst authReducer = (state = initialState, action: ActionsType):InitialStateType => {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case 'AN/auth/SET_USER_DATA':\r\n        case 'AN/auth/GET_CAPTCHA_URL_SUCCESS':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n\r\nsetAuthUserData:(userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: 'AN/auth/SET_USER_DATA', payload:\r\n        {userId, email, login, isAuth}\r\n} as const),\r\n\r\n\r\ngetCaptchaUrlSuccess:(captchaUrl: string) => ({\r\n    type: 'AN/auth/GET_CAPTCHA_URL_SUCCESS', payload: {captchaUrl}\r\n} as const)\r\n}\r\n\r\nexport const getAuthUserData = ():ThunkType => async (dispatch: any) => {\r\n    let meData = await authApi.me();\r\n\r\n    if (meData.resultCode === ResultCode.Success) {\r\n        let {id, login, email} = meData.data;\r\n        dispatch(actions.setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\r\n    // @ts-ignore\r\n    let loginData = await authApi.login(email, password, rememberMe, captcha)\r\n    if (loginData.resultCode === ResultCode.Success) {\r\n        await dispatch(getAuthUserData())\r\n    } else {\r\n        if (loginData.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\r\n            await dispatch(getCaptchaUrl())\r\n        }\r\n        let message = loginData.messages.length > 0 ? loginData.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch:any) => {\r\n    const data = await securityApi.getCaptchaUrl()\r\n    const captchaUrl = data.url\r\n        dispatch(actions.getCaptchaUrlSuccess(captchaUrl));\r\n    }\r\n\r\n\r\nexport const logout = (): ThunkType => async (dispatch: any) => {\r\n    let response = await authApi.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actions.setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\ntype ThunkType = BaseThunkType<ActionsType | ReturnType<typeof stopSubmit>>\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nconst appReducer = (state = initialState, action:ActionsType):InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AN/APP/INITIALIZED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({type: 'AN/APP/INITIALIZED_SUCCESS'} as const)\r\n\r\n}\r\nexport const initializeApp = (): ThunkType => async (dispatch: any) => {\r\nlet promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(actions.initializedSuccess())\r\n        })\r\n}\r\n\r\n\r\n\r\nexport default appReducer;","import {Action, applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\ntype RootReducerType = typeof rootReducer\r\n\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n\r\nexport type InferActionsTypes<T> = T extends {[key: string]: (...args: any[]) => infer U} ? U : never\r\n\r\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import {AppDispatch} from \"../redux/redux-store\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport const useAppDispatch = (): AppDispatch => {\r\n    return useDispatch()\r\n}","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\n\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<AppStateType> = useSelector","import React, {useState} from \"react\";\r\nimport style from \"./Paginator.module.css\";\r\nimport cn from 'classnames'\r\n\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChanged?: (pageNumber:number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({totalItemsCount, pageSize,\r\n                                          currentPage = 1, onPageChanged = () => {}, portionSize = 20}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages = [] as Array<number>;\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return <div className={style.paginator}>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n\r\n\r\n\r\n            {pages\r\n                .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n                .map((page) => {\r\n                return <span className={cn({\r\n                [style.selectedPage] : currentPage === page\r\n            }, style.pageNumber)}\r\n                key={page}\r\n                             onClick={() => {\r\n                                 onPageChanged(page)\r\n                             }}>{page}</span>\r\n\r\n            })}\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n\r\n\r\n        </div>\r\n\r\n        }\r\n\r\n        export default Paginator;","import React from \"react\";\r\nimport style from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/icon-256x256.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\n\r\nconst Users: React.FC<PropsType> = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto} className={style.userPhoto}/>\r\n                </NavLink>\r\n                    </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress\r\n                        .some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  unfollow(user.id)\r\n                              }}>\r\n                        Unfollow</button>\r\n                    : <button disabled={followingInProgress\r\n                        .some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  follow(user.id)\r\n                              }}>\r\n                        Follow</button>}\r\n            </div>\r\n                </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n            <span>\r\n            <div>{'user.location.country'}</div>\r\n                <div>{'user.location.city'}</div>\r\n            </span>\r\n            </span>\r\n        </div>)\r\n\r\n\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true)\r\n    })\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return  state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return  state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return  state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return  state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return  state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n    return  state.usersPage.filter\r\n}\r\n\r\n\r\n\r\n\r\n","import {Field, Form, Formik} from \"formik\";\r\nimport {FilterType} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUsersFilter} from \"../../redux/users-selectors\";\r\n\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors = {}\r\n    return errors\r\n}\r\n\r\ntype FriendFormType = 'true' | 'false' | 'null'\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: 'true' | 'false' | 'null'\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\n\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\nconst filter = useSelector(getUsersFilter)\r\n    const submit = (values: FormType, {setSubmitting}: {setSubmitting: (isSubmitting: boolean)=> void}) => {\r\n\r\n        const filter: FilterType = {\r\n    term: values.term,\r\n    friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n}\r\n\r\n\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\nreturn <div>\r\n    <Formik\r\n        enableReinitialize\r\n        initialValues={{term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n        validate={usersSearchFormValidate}\r\n        onSubmit={submit}\r\n        >\r\n        {({ isSubmitting }) => (\r\n            <Form>\r\n                <Field type=\"text\" name=\"term\" />\r\n\r\n                <Field name=\"friend\" as='select'>\r\n                    <option value='null'>All</option>\r\n                    <option value='true'>Only followed</option>\r\n                    <option value='false'>Only unfollowed</option>\r\n</Field>\r\n                <button type ='submit' disabled={isSubmitting}>\r\n                    Find\r\n                </button>\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n</div>\r\n})\r\n","import React, {FC, useEffect} from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport {UsersSearchForm} from \"./UsersSearchForm\";\r\nimport {FilterType, follow, requestUsers, unfollow} from \"../../redux/users-reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../redux/users-selectors\";\r\nimport {useAppDispatch} from \"../../hooks/useAppDispatch\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\ntype PropsType = {}\r\n\r\nexport const Users: FC<PropsType> = () => {\r\n\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const users = useSelector(getUsers)\r\n    const filter = useSelector(getUsersFilter)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    let [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    const searchTerm = searchParams.get('term') || ''\r\n\r\n    const searchCurrentPage = +(searchParams.get('currentPage') || '1')\r\n\r\n    const searchFriend = searchParams.get('friend') === 'null' ? null : Boolean(searchParams.get('friend'))\r\n\r\n    useEffect(() => {\r\n        dispatch(requestUsers(searchCurrentPage, pageSize, {term: searchTerm, friend: searchFriend} ))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setSearchParams({term: filter.term, friend: String(filter.friend), currentPage: String(currentPage)})\r\n    }, [filter, currentPage])\r\n\r\n\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize, filter))\r\n    }\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(1,pageSize, filter))\r\n    }\r\n\r\n    const following = (userId: number) => {\r\n        dispatch(follow(userId))\r\n    }\r\n\r\n    const unfollowing = (userId: number) => {\r\n        dispatch(unfollow(userId))\r\n    }\r\n\r\n\r\n\r\n    return <div>\r\n\r\n        <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n       <div>\r\n        {\r\n            users.map(user => <User user={user}\r\n                                    followingInProgress={followingInProgress}\r\n                                    key={user.id}\r\n                                    unfollow={unfollowing}\r\n                                    follow={following}\r\n                />\r\n            )\r\n        }\r\n       </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {getIsFetching} from \"../../redux/users-selectors\";\r\n\r\n\r\ntype UsersPagePropsType = {\r\n    pageTitle: string\r\n}\r\n\r\nexport const UsersPage:React.FC<UsersPagePropsType> = (props) => {\r\n    const isFetching = useSelector(getIsFetching)\r\n        return <>\r\n            <h2>{props.pageTitle}</h2>\r\n            {isFetching ? <Preloader/> : null}\r\n            <Users/>\r\n        </>\r\n    }\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from 'redux-form'\r\nimport {createField, GetStringKeysType, Input} from \"../common/FormsComtrol/FormsControl\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Navigate} from \"react-router\";\r\nimport style from './../common/FormsComtrol/FormsControl.module.css'\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {useAppDispatch} from \"../../hooks/useAppDispatch\";\r\n\r\n\r\ntype LoginFormOwnPropsType = {\r\n    captchaUrl: string | null\r\n}\r\n\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnPropsType> & LoginFormOwnPropsType> = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField<LoginFormValuesTypeKeys>('Email', 'email', [required], Input, [], \"Логин для тестового аккаунта: free@samuraijs.com\")}\r\n            {createField<LoginFormValuesTypeKeys>('Password', 'password', [required], Input, {type: 'password'}, \"Пароль для тестового аккаунта: free\")}\r\n            {createField<LoginFormValuesTypeKeys>(undefined, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\r\n\r\n            {captchaUrl && <img src={captchaUrl}/>}\r\n            {captchaUrl && createField<LoginFormValuesTypeKeys>('Symbols from image', 'captcha', [required], Input, {})}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button style={{fontWeight: 'bold'}}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnPropsType>({form: 'login'})(LoginForm)\r\n\r\n\r\n\r\ntype LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\ntype LoginFormValuesTypeKeys = GetStringKeysType<LoginFormValuesType>\r\n\r\n\r\nexport const Login: React.FC = () => {\r\n\r\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n    const captchaUrl = useSelector((state: AppStateType) => state.auth.captchaUrl)\r\n\r\n   const dispatch = useAppDispatch()\r\n\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }\r\n\r\n\r\n    if (isAuth) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n    </div>\r\n}\r\n","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const selectIsAuth = (state: AppStateType) => {\r\n    return  state.auth.isAuth\r\n}\r\n\r\nexport const selectCurrentLogin = (state: AppStateType) => {\r\n    return  state.auth.login\r\n}","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport {Avatar, Button, Layout, theme} from \"antd\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\nimport {useAppSelector} from \"../../hooks/useAppSelector\";\r\nimport {selectCurrentLogin, selectIsAuth} from \"../../redux/auth-selectors\";\r\nimport {useAppDispatch} from \"../../hooks/useAppDispatch\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport type StatePropsType = {}\r\n\r\n\r\nexport const Header:React.FC<StatePropsType> = () => {\r\n\r\nconst isAuth = useAppSelector(selectIsAuth)\r\n    const login = useAppSelector(selectCurrentLogin)\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    const logoutCallback = () => {\r\n    dispatch(logout())\r\n    }\r\n\r\n    const {Header} = Layout;\r\n\r\n    const {\r\n        token: { colorBgContainer },\r\n    } = theme.useToken();\r\n\r\n    return  <Header className={style.header} style={{ padding: 0, background: colorBgContainer}}>\r\n        {isAuth\r\n            ? <>\r\n                <span className={style.aurora}>Aurora</span>\r\n                <Avatar alt={login || ''} style={{backgroundColor: '#423189', margin: '10px'}} shape=\"square\" icon={<UserOutlined/>}/>\r\n                <span style={{fontWeight: 'bold'}}>{login}</span>\r\n                <Button style={{marginLeft: '10px'}}onClick={logoutCallback}>Log out</Button>\r\n            </>\r\n            : <Button>\r\n                <Link to={'/login'}>Login</Link>\r\n            </Button>\r\n        }\r\n    </Header>\r\n}","import React, {FC, lazy, useEffect, useState} from 'react';\r\nimport style from './App.module.css';\r\nimport {Link, Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {useParams} from \"react-router\";\r\nimport {useAppDispatch} from \"./hooks/useAppDispatch\";\r\nimport {useAppSelector} from \"./hooks/useAppSelector\";\r\nimport {UsersPage} from \"./components/Users/UsersPage\";\r\nimport {Login} from \"./components/Login/Login\";\r\nimport 'antd/dist/reset.css'\r\nimport type {MenuProps} from 'antd';\r\nimport {Layout, Menu} from \"antd\";\r\nimport {CommentOutlined, MessageOutlined, TeamOutlined, UserOutlined,} from '@ant-design/icons';\r\nimport {Header} from \"./components/Header/Header\";\r\n\r\n\r\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\n\r\nconst withRouter =<T,> (WrappedComponent: FC<T>) => (props: T) => {\r\n    const params = useParams();\r\n    return (\r\n        <WrappedComponent\r\n            {...props}\r\n            params={params}\r\n\r\n        />\r\n    );\r\n};\r\n\r\nconst {  Content, Footer, Sider } = Layout;\r\n\r\ntype MenuItem = Required<MenuProps>['items'][number];\r\n\r\nfunction getItem(\r\n    label: React.ReactNode,\r\n    key: React.Key,\r\n    icon?: React.ReactNode,\r\n    children?: MenuItem[],\r\n): MenuItem {\r\n    return {\r\n        key,\r\n        icon,\r\n        children,\r\n        label,\r\n    } as MenuItem;\r\n}\r\n\r\nconst items: MenuItem[] = [\r\n    getItem('My profile', '1', <Link to='/profile'><UserOutlined /></Link>),\r\n    getItem('Dialogs', '2', <Link to='/dialogs'><MessageOutlined /></Link>),\r\n    getItem('Users', '3', <Link to='/users'><TeamOutlined /></Link> ),\r\n]\r\n\r\n\r\n\r\nconst App: React.FC = () => {\r\n\r\n    const [collapsed, setCollapsed] = useState(true);\r\n\r\n\r\n\r\n    const initialized = useAppSelector((state) => state.app.initialized)\r\n    const dispatch = useAppDispatch()\r\n    const catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\r\n        alert('Some error occurred')\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeApp())\r\n        window.addEventListener('unhandledrejection', catchAllUnhandledErrors)\r\n        return () => {window.removeEventListener('unhandledrejection', catchAllUnhandledErrors)}\r\n    }, [])\r\n\r\n\r\n    if (!initialized) {\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n    return (\r\n        <Layout className={style.layoutOne}>\r\n            <Sider collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}>\r\n                <img src='https://shapka-youtube.ru/wp-content/uploads/2020/07/letter-a.jpg' className={style.img}  />\r\n                    <Menu theme=\"dark\" mode=\"inline\" items={items}/>\r\n            </Sider>\r\n            <Layout className=\"site-layout\" style={{display: 'flex', flexDirection: 'column' } }>\r\n                <Header/>\r\n                <Content style={{ margin: '0 16px' }}>\r\n                    <Routes>\r\n                                        <Route path=\"/\"\r\n                                               element={<Navigate to={'/profile'}/>}/>\r\n                                        <Route path=\"/profile/:userId\"\r\n                                               element={<ProfileContainer/>}/>\r\n                                        <Route path=\"/profile\"\r\n                                               element={<React.Suspense fallback={<Preloader/>}><ProfileContainer/></React.Suspense>}/>\r\n                                        <Route path='/dialogs'\r\n                                               element={<React.Suspense fallback={<Preloader/>}><DialogsContainer/></React.Suspense>}/>\r\n                                        <Route path='/users/*'\r\n                                            //@ts-ignore\r\n                                               element={<UsersPage pageTitle={'Пользователи'}/>}/>\r\n                                         <Route path='/login'\r\n                                                element={<Login/>}/>\r\n                                        <Route path=\"*\"\r\n                                               element={<div>404 NOT FOUND</div>}/>\r\n                                    </Routes>\r\n                </Content>\r\n\r\n                <Footer className={style.footer}>Aurora Social Network ©2022 Created by sleychez</Footer>\r\n            </Layout>\r\n\r\n        </Layout>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default withRouter(App);","import store from \"./redux/redux-store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\n\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLDivElement);\r\n\r\n    root.render(\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n            </BrowserRouter>\r\n        </React.StrictMode>\r\n    );\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport style from './FormsControl.module.css'\r\nimport {Field, WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\"\r\nimport {FieldValidatorType} from \"../../../utils/validators/validators\";\r\n\r\n\r\nexport type GetStringKeysType<T> = Extract<keyof T, string>\r\n\r\ntype FormsControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n    children: React.ReactNode\r\n}\r\n\r\n\r\nconst FormsControl: React.FC<FormsControlPropsType> = ({meta: {touched, error},children }) => {\r\nconst hasError = touched && error\r\nreturn (\r\n    <div className={style.formControl + ' ' + (hasError ? style.error : '')}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        { hasError && <span>{error}</span> }\r\n    </div>\r\n)\r\n}\r\n\r\n\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormsControl {...props}><textarea {...input} {...restProps} /></FormsControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormsControl {...props}><input {...input} {...restProps} /></FormsControl>\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\r\n                            name: FormKeysType,\r\n                            validators: Array<FieldValidatorType>,\r\n                            component: React.FC<WrappedFieldProps>,\r\n                            props = {}, text = '') {\r\n    return <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               component={component}\r\n               validate={validators}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n}\r\n\r\n","import React from \"react\";\r\nimport preloader from '../../../assets/images/preloader.gif'\r\n\r\nconst Preloader = () => {\r\n    return <img src={preloader} />\r\n}\r\n\r\nexport default Preloader;"],"sourceRoot":""}